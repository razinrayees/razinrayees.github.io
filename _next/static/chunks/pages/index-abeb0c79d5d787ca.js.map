{"version":3,"file":"static/chunks/pages/index-abeb0c79d5d787ca.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./components/CopyToClipboard/CopyIcon.tsx","webpack://_N_E/./components/CopyToClipboard/TickIcon.tsx","webpack://_N_E/./components/CopyToClipboard/index.tsx","webpack://_N_E/./components/common/syntax.ts","webpack://_N_E/./components/Code/CodeEditor/index.tsx","webpack://_N_E/./components/Code/Terminal/index.tsx","webpack://_N_E/./components/Code/index.tsx","webpack://_N_E/./components/Documentation/Snippet.tsx","webpack://_N_E/./components/Documentation/index.tsx","webpack://_N_E/./components/Footer/index.tsx","webpack://_N_E/./components/Header/bhaiLangLogo.tsx","webpack://_N_E/./components/Header/index.tsx","webpack://_N_E/./pages/index.tsx","webpack://_N_E/../../packages/interpreter/dist/index.js"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import { SVGProps } from \"react\";\n\nexport default function CopyIcon(props: SVGProps<SVGSVGElement>) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"w-6 h-6\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n      strokeWidth={1.5}\n      {...props}\n    >\n      <path\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\n      />\n    </svg>\n  );\n}","import { SVGProps } from \"react\";\n\nexport default function TickIcon(props: SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2} {...props}>\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5 13l4 4L19 7\" />\n    </svg>\n  );\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport CopyIcon from \"./CopyIcon\";\nimport TickIcon from \"./TickIcon\";\n\ninterface Props {\n  text: string;\n}\n\nexport default function CopyToClipboard(props: Props) {\n  const { text } = props;\n  const [copySuccess, setCopySuccess] = useState(false);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (copySuccess) {\n      setTimeout(() => {\n        setCopySuccess(false);\n      }, 3000);\n    }\n  }, [copySuccess]);\n\n  function copyToClipboard(e: React.MouseEvent) {\n    e.stopPropagation();\n    if (text) {\n      navigator.clipboard?.writeText(text).then(() => {\n        setCopySuccess(true);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  return (\n    <>\n      <button\n        ref={buttonRef}\n        className={\"md:hidden absolute top-2 right-2 sm:top-4 sm:right-4 group-hover:flex items-center justify-center p-1 sm:p-2 border border-[#f0f6fc1a] text-base font-medium rounded-md text-gray-400 bg-[#333] hover:bg-[#4d4d4d] cursor-pointer transition-all duration-100 \" + (copySuccess ? 'text-bhagwa-300 border-bhagwa-300' : '')}\n        onClick={copyToClipboard}\n      >\n        {copySuccess ?\n          <>\n            <TickIcon />\n            <span className=\"copied-text absolute top-1/2 -translate-y-1/2 right-[calc(100%+8px)] p-1 rounded-md text-xs font-normal text-bhagwa-300 bg-[#666] border border-transparent\">\n              Copied!\n            </span>\n          </>\n          : <CopyIcon />}\n      </button>\n    </>\n  );\n}","import Prism, { languages } from \"prismjs\";\n\n\nexport const bhaiLangSyntax = languages.extend(\"clike\", {\n  comment: [\n    {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true,\n      greedy: true,\n    },\n    {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|([^\\\\:]|^)\\/\\/.*$/,\n      lookbehind: true,\n      greedy: true,\n    },\n  ],\n  string: {\n    pattern: /([\"'])((?:\\\\\\1|(?:(?!\\1)).)*)(\\1)/,\n    greedy: true,\n  },\n  keyword: /\\b(?:hi bhai|bye bhai|bol bhai|bhai ye hai|nalla|agar bhai|nahi to bhai|warna bhai|jab tak bhai|bas kar bhai|agla dekh bhai)\\b/,\n  boolean: /\\b(?:sahi|galat)\\b/,\n  number: /(?:(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n  operator:\n    /[*/%^!=]=?|~|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n});\n\nPrism.languages.bhaiLang = bhaiLangSyntax;\n","import React from \"react\";\n\nimport dynamic from \"next/dynamic\";\nimport { highlight } from \"prismjs\";\n\nimport { bhaiLangSyntax } from \"../../common/syntax\";\n\nimport \"prismjs/themes/prism-tomorrow.css\";\n\n\nconst Editor = dynamic(() => import(\"react-simple-code-editor\"), {\n  ssr: false,\n});\n\nconst CopyToClipboard = dynamic(() => import(\"../../CopyToClipboard\"), {\n  ssr: false,\n});\n\nconst CodeEditor = (props: Props) => {\n  const { handleChange, code } = props;\n\n  const highlightWithLineNumbers = (input: string) =>\n    highlight(input, bhaiLangSyntax, \"bhaiLang\")\n      .split(\"\\n\")\n      .map((line, i) => `<span class='editorLineNumber'>${i + 1}</span>${line}`)\n      .join(\"\\n\");\n\n  return (\n    <div className=\"playground-editor group\">\n      {/* Wrapping Editor component in a separate div to control its height and overflow */}\n      <div className=\"editor-container\">\n        <Editor\n          value={code}\n          onValueChange={(code) => handleChange(code)}\n          highlight={(code) => highlightWithLineNumbers(code)}\n          padding={10}\n          textareaClassName=\"codeArea\"\n          className=\"editor\"\n          id=\"codeEditor\"\n          style={{\n            fontFamily: \"monospace\",\n            fontSize: 16,\n          }}\n        />\n      </div>\n      <CopyToClipboard text={code} />\n    </div>\n  );\n};\ntype Props = {\n  handleChange: (newCode: string) => void;\n  code: string;\n};\nexport default React.memo(CodeEditor);\n\n\n","import React, { useEffect, useRef } from \"react\";\n\n\nconst Terminal = (props: Props) => {\n  const { output, isSuccess } = props;\n  const terminalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => { \n    if (output.length) {\n      setTimeout(() => terminalRef.current?.scrollIntoView(false), 100);\n    }\n  }, [output]);\n\n  \n  return (\n    <div\n    ref={terminalRef}\n      className={`${\n        isSuccess !== null ? \"terminal\" : \"terminal-collapsed\"\n      } bg-black text-white my-6`}\n    >\n      {isSuccess !== null && !isSuccess ? (\n        <div className=\"text-red-700 output opacity-0\">❌ Arre Bhai Bhai Bhai !!!</div>\n      ) : (\n        <div className=\"text-green-700 output opacity-0\">Shandaar bhai 🎉</div>\n      )}\n      {output.map((line, i) => {\n        return (\n          <div\n            key={i}\n            className={`${line.isError ? \"text-red-500\" : \"\"} output opacity-0`}\n          >\n            &gt; {line.value}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\ntype Props = {\n  output: {\n    value: string;\n    isError: boolean;\n  }[];\n  isSuccess: boolean | null;\n};\nexport default React.memo(Terminal);\n","import React, { useState } from \"react\";\n\nimport interpreter from \"bhai-lang-interpreter\";\n\nimport { sendEvents } from \"../../helpers\";\n\nimport CodeEditor from \"./CodeEditor\";\nimport Terminal from \"./Terminal\";\n\n\nconst initialCode = `\nhi bhai\n bol bhai \"Hello World\";\n \n  bhai ye hai a = 3;\n  bhai ye hai b = 0;\n\n  jab tak bhai (b < 5) {\n    bol bhai b;\n\n    agar bhai (b == a) {\n      bol bhai \"b is equal to a\";\n    } nahi to bhai (b == 0) {\n      bol bhai \"b is equal to zero\";\n    }\n\n    b += 1;\n  }\n\nbye bhai\n`;\n\nconst Code = (props: Props) => {\n  const {} = props;\n  const [code, setCode] = useState(initialCode);\n  const [output, setOutput] = useState<{ value: string; isError: boolean }[]>(\n    []\n  );\n  const [isSuccess, setIsSuccess] = useState<boolean | null>(null);\n\n  const handleChange = (newCode: string) => {\n    setCode(newCode);\n  };\n\n  const executeCode = () => {\n    let orignalConsoleLog = console.log;\n    const outputList = [];\n    let isExecusionSuccess = true;\n    console.log = function (...args) {\n      outputList.push({ value: args.join(\"\\n\"), isError: false });\n    };\n\n    try {\n      interpreter.interpret(code);\n    } catch (e) {\n      if (e instanceof Error) {\n        isExecusionSuccess = false;\n        outputList.push({ value: e.message, isError: true });\n      } else {\n        console.error(e);\n      }\n    }\n\n    sendEvents(\"CodeExecuted\", {success: isExecusionSuccess});\n\n    setIsSuccess(isExecusionSuccess);\n    setOutput(outputList);\n    console.log = orignalConsoleLog;\n  };\n\n  const clearCode = () => {\n    sendEvents(\"CodeCleared\");\n    setCode(\"\");\n    setIsSuccess(null);\n    setOutput([]);\n  };\n\n  return (\n    <div id=\"playground\" className=\"mx-4 sm:mx-12\">\n      <div className=\"sm:flex justify-between items-center\">\n        <h2 className=\"text-3xl font-extrabold tracking-tight text-gray-100 sm:text-4xl my-4\">\n          Playground\n        </h2>\n        <div className=\"flex\">\n          <button\n            disabled={!code}\n            onClick={executeCode}\n            className=\"mx-2 flex items-center justify-center px-8 border border-transparent text-base font-medium rounded-md text-white bg-bhagwa-600 hover:bg-bhagwa-700 md:text-lg md:px-10 my-4 sm:my-8 sm:py-3 disabled:opacity-40\"\n          >\n            Run\n          </button>\n\n          <button\n            onClick={clearCode}\n            className=\"mx-2 flex items-center justify-center px-8 border border-transparent text-base font-medium rounded-md text-bhagwa-700 bg-bhagwa-300 hover:bg-bhagwa-400 md:text-lg md:px-10 my-4 sm:my-8 sm:py-3\"\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n      <CodeEditor handleChange={handleChange} code={code} />\n      <Terminal output={output} isSuccess={isSuccess} />\n    </div>\n  );\n};\ntype Props = {};\nexport default React.memo(Code);\n","import React from \"react\";\n\nimport { highlight } from \"prismjs\";\n\nimport { bhaiLangSyntax } from \"../common/syntax\";\nimport CopyToClipboard from \"../CopyToClipboard\";\n\nconst Snippet = (props: Props) => {\n  const { code } = props;\n\n  return (\n    <div className=\"relative snippet-container group\">\n      <div\n        className=\"bg-editorBackground py-2 px-2 my-6 text-sm text-white documentation-code\"\n        dangerouslySetInnerHTML={{\n          __html: highlight(code, bhaiLangSyntax, \"bhaiLang\").replace(\n            new RegExp(\"\\n\", 'g'),\n            \"<br/>\"\n          ).replace(new RegExp('  ', 'g'), '&emsp;'),\n        }}\n      ></div>\n      <CopyToClipboard text={code} />\n    </div>\n  );\n  \n};\ntype Props = { code: string };\nexport default React.memo(Snippet);\n","import Snippet from \"./Snippet\";\n\n\n/* This example requires Tailwind CSS v2.0+ */\nconst features = [\n  {\n    name: \"General\",\n    description: (\n      <>\n        <code className=\"language-cpp\">hi bhai</code> is the entrypoint for the\n        program and all program must end with{\" \"}\n        <code className=\"language-cpp\">bye bhai</code>. Anything outside of it\n        will be ignored.\n      </>\n    ),\n    code: `This will be ignored\n\nhi bhai\n  // Write code here\nbye bhai\n\nThis too\n    `,\n  },\n  {\n    name: \"Variables\",\n    description: (\n      <>\n        Variables can be declared using{\" \"}\n        <code className=\"language-cpp\">bhai ye hai</code>.\n      </>\n    ),\n    code: `hi bhai\n    bhai ye hai a = 10;\n    bhai ye hai b = \"two\";\n    bhai ye hai c = 15;\n    a = a + 1;\n    b = 21;\n    c *= 2;\nbye bhai\n    `,\n  },\n  {\n    name: \"Types\",\n    description: (\n      <>\n        Numbers and strings are like other languages. Null values can be denoted\n        using <code className=\"language-cpp\">nalla</code>.{\" \"}\n        <code className=\"language-cpp\">sahi</code> and{\" \"}\n        <code className=\"language-cpp\">galat</code> are the boolean values.\n      </>\n    ),\n    code: `hi bhai\n    bhai ye hai a = 10;\n    bhai ye hai b = 10 + (15*20);\n    bhai ye hai c = \"two\";\n    bhai ye hai d = 'ok';\n    bhai ye hai e = nalla;\n    bhai ye hai f = sahi;\n    bhai ye hai g = galat;\nbye bhai\n    `,\n  },\n  {\n    name: \"Built-ins\",\n    description: (\n      <>\n        Use <code className=\"language-cpp\">bol bhai</code> to print anything to\n        console.\n      </>\n    ),\n    code: `hi bhai\n    bol bhai \"Hello World\";\n    bhai ye hai a = 10;\n    {\n       bhai ye hai b = 20;\n       bol bhai a + b;\n    }\n    bol bhai 5, 'ok', nalla , sahi , galat;\nbye bhai\n    `,\n  },\n  {\n    name: \"Conditionals\",\n    description: (\n      <>\n        Bhailang supports if-else-if ladder construct , <code className=\"language-cpp\">agar bhai</code> block will execute if condition is <code className=\"language-cpp\">sahi</code>, otherwise one of the subsequently added <code className=\"language-cpp\">nahi to bhai</code> blocks will execute if their respective condition is <code className=\"language-cpp\">sahi</code>, and the <code className=\"language-cpp\">warna bhai</code> block will eventually execute if all of the above conditions are <code className=\"language-cpp\">galat</code>.\n      </>\n    ),\n    code: `hi bhai\n    bhai ye hai a = 10;\n    agar bhai (a < 20) {\n      bol bhai \"a is less than 20\";\n    } nahi to bhai ( a < 25 ) {\n      bol bhai \"a is less than 25\";\n    } warna bhai {\n      bol bhai \"a is greater than or equal to 25\";\n    }\nbye bhai\n    `\n  },\n  {\n    name: \"Loops\",\n    description: (\n      <>\n        Statements inside <code className=\"language-cpp\">jab tak bhai</code> blocks are executed as long as a specified condition evaluates to <code className=\"language-cpp\">sahi</code>. If the condition becomes <code className=\"language-cpp\">galat</code>, statement within the loop stops executing and control passes to the statement following the loop. \n        Use <code className=\"language-cpp\">bas kar bhai</code> to break the loop and <code className=\"language-cpp\">agla dekh bhai</code> to continue within loop.\n      </>\n    ),\n    code: `hi bhai\n    bhai ye hai a = 0;\n    jab tak bhai (a < 10) {\n      a += 1;\n      agar bhai (a == 5) {\n        bol bhai \"andar se bol bhai \", a;\n        agla dekh bhai;\n      }\n      agar bhai (a == 6) {\n        bas kar bhai;\n      }\n      bol bhai a;\n    }\n    bol bhai \"done\";\nbye bhai\n    `\n  }\n\n];\n\nexport default function Documentation() {\n  return (\n    <div>\n      <div className=\"max-w-2xl mx-auto py-24 px-4 grid items-center grid-cols-1 gap-y-16 gap-x-8 sm:px-6 sm:py-32 lg:max-w-7xl lg:px-8\">\n        <div>\n          <h2 className=\"text-3xl font-extrabold tracking-tight text-gray-100 sm:text-4xl\">\n            Documentation\n          </h2>\n          <p className=\"mt-4 text-gray-300\">\n            Bhailang is dynamically typed toy programming language, based on an\n            inside joke, written in Typescript.\n          </p>\n\n          <div className=\"mt-16 grid grid-cols-1 gap-x-6 gap-y-10 sm:grid-cols-2 sm:gap-y-16 lg:gap-x-8\">\n            {features.map((feature) => (\n              <div key={feature.name} className=\"border-t border-gray-200 pt-4\">\n                <div className=\"font-medium text-gray-300\">{feature.name}</div>\n                <div className=\"mt-2 text-sm text-gray-200\">\n                  {feature.description}\n                </div>\n                <Snippet code={feature.code} />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\n\nconst Footer = (props: Props) => {\n  const {} = props;\n  return (\n    <footer>\n      <div className=\"text-white text-sm text-center py-4\">\n        &copy; 2022{\" \"}\n        <a className=\"hover:text-bhagwa-600\" href=\"https://tripathi.dev\">\n          Rishabh Tripathi\n        </a>\n        ,{\" \"}\n        <a\n          className=\"hover:text-bhagwa-600\"\n          href=\"https://github.com/aniketsingh0104\"\n        >\n          Aniket Singh\n        </a>\n      </div>\n    </footer>\n  );\n};\ntype Props = {};\nexport default React.memo(Footer);\n","export default function BhaiLangLogo() {\n  return (\n    <svg\n      className=\"h-min w-full\"\n      version=\"1.0\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"824.000000pt\"\n      height=\"196.000000pt\"\n      viewBox=\"0 0 824.000000 196.000000\"\n      preserveAspectRatio=\"xMidYMid meet\"\n    >\n      <metadata></metadata>\n      <g\n        transform=\"translate(0.000000,196.000000) scale(0.100000,-0.100000)\"\n        fill=\"#FF5733\"\n        stroke=\"none\"\n      >\n        <path\n          d=\"M694 1951 c8 -12 -8 -13 -159 -12 -74 1 -105 -4 -175 -28 -83 -28\n-85 -30 -93 -67 -9 -46 2 -83 43 -134 l31 -39 -16 -46 c-8 -26 -20 -67 -26\n-93 -6 -26 -12 -54 -15 -62 -20 -80 -29 -106 -39 -115 -12 -9 -33 -101 -40\n-170 -2 -16 -6 -44 -9 -62 -3 -17 -2 -35 4 -38 5 -3 10 -14 10 -23 0 -14 -2\n-15 -10 -2 -12 19 -15 15 -29 -55 -19 -93 -52 -246 -62 -285 -5 -19 -16 -69\n-25 -110 -9 -41 -21 -79 -25 -85 -5 -5 -9 -26 -9 -47 0 -47 26 -63 48 -30 15\n22 39 32 26 10 -11 -18 -11 -59 0 -66 6 -4 29 -14 51 -23 l40 -16 -35 -8 c-19\n-4 -59 -16 -89 -28 -49 -18 -53 -21 -37 -33 17 -12 17 -13 -9 -20 -31 -8 -54\n-52 -33 -66 36 -24 349 30 588 103 241 72 402 170 484 292 57 87 69 129 70\n242 1 90 -2 106 -26 156 -16 31 -47 75 -70 99 -42 42 -166 110 -200 110 -35 0\n-25 18 36 63 64 47 188 171 184 185 -1 4 9 27 21 52 33 62 39 160 16 231 -20\n60 -96 143 -156 172 -77 36 -280 73 -265 48z m180 -232 c-2 -4 1 -11 9 -16 22\n-14 58 -66 49 -72 -4 -3 -13 -24 -20 -47 -6 -22 -25 -55 -42 -72 -16 -18 -30\n-37 -30 -43 0 -13 -96 -106 -162 -157 -27 -20 -48 -39 -48 -42 0 -3 -14 -14\n-30 -24 l-31 -18 14 34 c7 18 25 39 39 45 14 7 46 35 72 63 26 27 52 50 59 50\n12 0 66 60 119 130 28 37 34 97 13 131 -12 19 -67 49 -90 49 -9 0 -14 4 -11 8\n3 5 25 4 50 -2 24 -6 43 -13 40 -17z m-59 -28 c26 -5 30 -10 27 -36 -2 -20 0\n-26 6 -17 7 11 10 11 15 -2 9 -24 -13 -66 -35 -66 -13 0 -18 -7 -18 -25 0 -18\n-5 -25 -20 -25 -11 0 -20 -6 -20 -13 0 -13 -25 -46 -94 -123 -39 -45 -74 -60\n-61 -26 4 9 26 71 50 137 23 66 51 139 60 163 18 44 25 47 90 33z m-520 -566\nc-19 -83 -25 -155 -14 -155 5 0 12 14 16 30 3 17 9 30 13 30 5 0 8 15 8 33 0\n30 17 87 25 87 9 0 -15 -109 -39 -174 -13 -38 -24 -77 -24 -87 0 -9 -6 -19\n-12 -22 -10 -3 -10 -7 1 -20 9 -12 10 -17 2 -17 -6 0 -14 7 -17 15 -9 22 -27\n18 -21 -5 3 -11 1 -20 -4 -20 -5 0 -9 -9 -9 -21 0 -11 -5 -29 -10 -40 -9 -15\n-7 -21 5 -25 17 -7 20 -36 5 -62 -5 -9 -16 -39 -24 -67 -12 -39 -15 -42 -11\n-15 2 19 7 45 11 58 4 13 2 22 -4 22 -6 0 -14 -17 -18 -37 -4 -21 -11 -44 -17\n-51 -5 -6 -13 -27 -17 -45 l-8 -32 -1 38 c-1 21 5 48 13 60 8 12 17 40 21 62\n4 22 11 45 15 50 5 6 9 20 8 30 -1 22 58 268 72 300 9 22 20 68 23 100 2 21\n17 49 23 43 2 -2 -3 -31 -11 -63z m233 -228 c8 -6 78 -13 157 -16 83 -4 149\n-11 155 -17 21 -21 23 -82 5 -129 -9 -25 -21 -45 -26 -45 -5 0 -9 -12 -9 -27\n0 -21 -3 -24 -10 -13 -7 12 -13 10 -32 -11 -35 -37 -160 -117 -247 -156 -42\n-19 -84 -45 -94 -57 -10 -11 -16 -15 -12 -8 9 17 -8 15 -58 -7 -102 -45 -113\n-46 -84 -12 8 9 49 115 92 236 107 299 100 284 127 278 13 -3 29 -11 36 -16z\"\n        />\n        <path\n          d=\"M4615 1916 c-5 -2 -35 -12 -65 -21 -30 -9 -72 -30 -92 -46 -20 -16\n-41 -29 -45 -29 -12 0 -69 -97 -83 -142 -6 -21 -20 -70 -30 -110 -33 -130 -49\n-181 -59 -187 -17 -11 -72 -301 -61 -322 13 -23 13 -39 0 -19 -12 19 -28 -21\n-42 -105 -8 -52 -28 -143 -68 -313 -5 -23 -10 -51 -10 -61 0 -11 -12 -33 -26\n-50 -64 -77 -84 -225 -44 -338 24 -69 26 -70 48 -50 58 52 574 234 831 292\n129 29 139 37 121 99 -9 34 -18 46 -31 46 -11 0 -19 -4 -19 -10 0 -16 -46 -12\n-60 5 -7 8 -18 15 -24 15 -6 0 -24 7 -40 15 -24 13 -55 14 -175 9 -94 -4 -149\n-10 -153 -17 -6 -9 -8 -8 -8 2 0 11 -16 12 -85 6 -47 -4 -85 -5 -85 -3 0 3 65\n182 144 399 249 683 297 802 337 846 12 12 19 25 16 30 -18 29 -157 72 -192\n59z m-339 -792 c-7 -33 -15 -65 -18 -70 -12 -18 -18 -124 -8 -124 5 0 10 8 10\n18 0 9 7 30 15 46 9 16 13 36 11 43 -3 7 -1 13 4 13 12 0 13 -42 2 -56 -13\n-14 -52 -137 -52 -162 0 -12 -5 -22 -11 -22 -6 0 -9 -9 -6 -20 3 -11 1 -23 -4\n-26 -5 -3 -9 4 -9 15 0 42 -18 19 -25 -31 -4 -29 -11 -57 -15 -63 -13 -17 -21\n-95 -10 -95 5 0 10 12 11 28 0 15 3 21 6 13 7 -17 -17 -91 -29 -91 -5 0 -6 5\n-3 10 3 6 1 10 -4 10 -6 0 -11 -4 -11 -10 0 -5 -4 -10 -10 -10 -11 0 -2 60 11\n74 5 6 9 21 9 34 0 13 9 56 20 95 11 40 31 115 44 167 14 52 32 120 41 150 9\n30 18 67 19 81 3 25 15 53 21 47 2 -2 -2 -31 -9 -64z\"\n        />\n        <path\n          d=\"M6987 1813 c-3 -27 -45 -178 -92 -338 -90 -304 -140 -496 -171 -655\n-10 -52 -21 -99 -24 -103 -4 -4 -17 38 -29 95 -53 248 -85 554 -62 596 10 18\n9 23 -3 28 -8 3 -22 28 -32 55 -26 70 -110 154 -176 174 -73 21 -75 21 -81\n-32 -3 -27 -37 -149 -75 -273 -114 -370 -149 -499 -190 -705 -58 -287 -62\n-475 -12 -475 5 0 22 11 38 25 16 13 32 22 35 19 3 -3 11 14 17 38 7 23 25 82\n41 129 33 97 34 103 17 94 -7 -4 -3 2 8 12 12 10 34 50 49 88 15 39 43 100 61\n137 36 71 42 94 22 82 -7 -4 -8 -3 -4 4 4 7 13 12 19 12 7 0 21 19 31 43 16\n36 20 39 26 22 130 -346 192 -466 286 -560 l35 -35 27 28 c15 16 35 31 44 35\n10 3 19 22 23 44 6 39 59 213 75 248 6 11 21 49 34 85 13 36 41 101 62 144 26\n56 34 81 25 84 -8 3 -6 9 7 18 24 16 132 225 132 254 0 11 4 28 9 38 14 25 76\n160 95 205 8 21 16 59 17 85 1 51 -19 142 -33 142 -4 0 -8 6 -8 13 0 21 -102\n115 -142 132 -21 8 -50 15 -66 15 -27 0 -30 -3 -35 -47z\"\n        />\n        <path\n          d=\"M2285 1781 c-44 -11 -122 -58 -161 -99 -35 -36 -60 -103 -104 -282\n-12 -47 -28 -98 -35 -115 -17 -38 -24 -62 -34 -122 -5 -26 -21 -106 -35 -177\n-14 -72 -26 -131 -26 -131 0 -1 -51 -5 -112 -8 -62 -4 -123 -9 -135 -13 l-23\n-6 19 53 c37 107 170 437 199 495 17 33 37 66 46 73 24 21 20 27 -36 52 -81\n36 -202 34 -284 -4 -85 -40 -106 -72 -139 -216 -24 -102 -33 -134 -43 -140\n-21 -14 -56 -225 -42 -251 8 -15 7 -18 -3 -14 -10 3 -17 -14 -27 -68 -7 -40\n-16 -89 -21 -108 -4 -19 -13 -66 -20 -105 -6 -38 -13 -81 -16 -95 -2 -14 -7\n-46 -10 -73 -3 -26 -10 -50 -14 -53 -11 -6 -12 -75 -1 -90 4 -6 17 -10 29 -9\n13 1 23 -5 26 -17 4 -13 15 -18 39 -18 79 0 71 -12 160 235 l54 149 75 23 c41\n12 112 34 158 48 46 14 86 23 88 21 2 -2 -1 -34 -8 -70 -6 -37 -9 -82 -5 -99\n4 -20 3 -27 -3 -18 -11 18 -15 4 -31 -109 -7 -47 -16 -98 -21 -114 -16 -51\n-11 -116 9 -123 9 -4 23 -15 30 -25 9 -12 23 -18 40 -16 24 3 30 14 78 158 28\n85 99 279 159 430 326 831 360 913 401 967 29 38 27 41 -31 72 -41 22 -126 27\n-190 12z\"\n        />\n        <path\n          d=\"M3798 1733 c-21 -2 -38 -8 -38 -14 0 -5 -4 -9 -10 -9 -22 0 -106 -61\n-127 -92 -24 -37 -49 -105 -68 -188 -22 -93 -44 -163 -53 -169 -9 -6 -37 -122\n-47 -196 -1 -5 -5 -26 -9 -46 -5 -23 -4 -45 3 -58 9 -17 9 -20 -3 -15 -16 6\n-17 3 -57 -191 -31 -151 -34 -180 -19 -170 6 3 10 -4 10 -17 0 -18 -2 -20 -10\n-8 -5 8 -12 11 -15 8 -10 -9 -35 -146 -35 -185 0 -18 -5 -33 -10 -33 -7 0 -10\n-22 -8 -57 3 -56 4 -58 30 -57 20 0 28 -6 32 -22 5 -20 12 -22 52 -20 31 2 51\n9 60 21 7 10 30 68 50 129 20 61 81 233 136 381 265 720 333 891 373 935 22\n25 20 29 -37 55 -52 25 -98 28 -200 18z m-224 -641 c-18 -11 -34 -49 -34 -77\n0 -14 -4 -34 -9 -43 -13 -25 -25 -132 -14 -132 10 0 37 87 34 108 -1 6 3 12 9\n12 15 0 12 -33 -5 -66 -8 -16 -15 -37 -15 -46 0 -9 -4 -19 -9 -22 -5 -4 -12\n-24 -16 -46 -4 -22 -11 -43 -16 -46 -6 -3 -7 -15 -3 -26 4 -14 2 -18 -5 -14\n-6 4 -11 14 -11 22 0 8 -5 12 -11 8 -6 -3 -9 -15 -6 -25 3 -11 2 -19 -3 -19\n-4 0 -10 -20 -13 -45 -4 -25 -9 -56 -13 -70 -4 -15 -2 -25 5 -25 6 0 11 10 12\n23 0 12 3 17 5 10 3 -6 -2 -33 -10 -60 -8 -28 -15 -39 -15 -25 -1 36 -19 25\n-27 -15 -4 -21 -11 -45 -16 -53 -6 -10 -7 -6 -4 15 3 17 8 49 11 72 4 24 11\n45 16 49 5 3 9 16 9 29 0 31 68 314 80 337 6 10 10 29 10 42 0 14 5 28 10 31\n6 3 10 24 10 46 0 21 4 39 9 39 5 0 13 9 16 21 5 16 10 18 18 10 9 -9 9 -14 1\n-19z\"\n        />\n        <path\n          d=\"M7782 1709 c-119 -38 -213 -121 -302 -266 -17 -29 -36 -53 -40 -53\n-21 0 -131 -276 -146 -365 -2 -11 -10 -51 -19 -90 -11 -50 -13 -77 -6 -97 6\n-17 7 -37 1 -51 -9 -22 -9 -22 -9 3 -1 19 -4 21 -13 12 -10 -10 -13 -61 -13\n-185 0 -153 2 -179 23 -238 26 -76 77 -141 133 -169 68 -35 212 -23 266 22 10\n8 11 13 3 18 -7 4 3 16 27 30 33 19 36 20 21 3 -42 -46 -3 -34 65 20 20 17 37\n36 37 44 0 7 5 13 12 13 6 0 20 7 30 17 17 15 18 13 18 -63 1 -145 46 -314 84\n-314 20 0 36 46 36 108 0 67 21 173 50 249 11 30 18 58 15 63 -3 5 -1 10 4 12\n11 4 71 132 71 151 0 14 18 63 46 124 8 17 14 44 14 60 0 20 7 31 23 38 17 8\n22 18 21 47 -2 54 -18 69 -73 67 -26 -1 -59 5 -76 13 -16 9 -52 19 -79 23 -27\n3 -54 9 -61 12 -10 3 -12 -6 -8 -36 5 -37 3 -41 -15 -41 -12 0 -78 -5 -147\n-11 -97 -8 -134 -8 -156 1 -16 7 -29 14 -29 15 0 1 16 42 36 91 38 95 116 247\n142 277 41 46 37 -1 -9 -102 -21 -46 -26 -67 -19 -76 19 -23 77 -45 119 -45\n54 0 171 57 171 83 0 10 4 16 9 13 10 -6 54 54 72 99 6 17 19 46 27 65 10 23\n16 69 16 135 1 90 -2 106 -27 157 -21 44 -42 68 -84 98 -53 38 -60 40 -127 39\n-42 0 -97 -8 -134 -20z m-380 -661 c-5 -7 -15 -42 -22 -78 -6 -36 -17 -85 -25\n-110 -17 -55 -29 -220 -16 -220 6 0 13 32 17 70 4 39 11 73 15 76 5 3 9 24 9\n47 0 31 3 38 12 29 9 -9 8 -29 -5 -84 -27 -119 -35 -180 -31 -243 6 -106 10\n-127 27 -137 10 -5 15 -13 12 -18 -8 -13 -35 -1 -35 15 0 8 -4 17 -10 20 -23\n14 -8 -38 18 -61 15 -14 27 -30 27 -34 0 -22 31 -34 102 -38 67 -4 81 -2 93\n13 14 17 13 18 -25 11 -49 -9 -44 -2 8 12 21 6 35 6 32 1 -4 -5 0 -9 7 -9 20\n0 54 27 46 36 -4 4 -14 1 -23 -6 -8 -7 -15 -10 -15 -6 0 3 19 18 43 33 23 15\n53 36 66 47 l25 21 -17 -27 c-27 -43 2 -35 48 13 22 22 54 50 70 62 l30 22\n-25 -30 c-89 -109 -273 -225 -353 -225 -135 1 -208 115 -206 324 0 56 4 124 9\n151 21 118 38 193 44 203 4 7 11 37 16 69 5 31 15 60 22 64 17 11 23 2 10 -13z\nm214 -303 c17 -45 73 -105 97 -105 7 0 28 4 47 10 34 9 34 8 -29 -52 -68 -64\n-174 -138 -199 -138 -24 0 -11 172 24 310 l29 115 6 -47 c4 -27 15 -68 25 -93z\"\n        />\n        <path\n          d=\"M3003 1652 c-110 -39 -140 -75 -258 -304 -28 -54 -54 -98 -60 -98 -5\n0 -30 -46 -54 -103 -24 -56 -52 -119 -62 -139 -9 -21 -15 -48 -12 -60 3 -17 2\n-19 -5 -9 -12 17 -174 -309 -175 -352 0 -17 -3 -23 -8 -15 -5 7 -24 -24 -53\n-85 -25 -53 -46 -100 -46 -103 0 -3 -6 -11 -13 -18 -7 -8 -19 -32 -27 -56 -13\n-38 -12 -44 3 -55 9 -6 14 -15 10 -19 -9 -9 18 -56 33 -56 22 0 57 40 155 175\n79 109 98 129 117 127 25 -4 120 18 204 47 29 10 70 21 91 25 34 6 37 5 37\n-16 1 -13 3 -45 5 -73 18 -224 25 -249 70 -271 19 -9 41 -14 48 -11 8 3 17 46\n25 128 6 68 23 180 36 249 55 284 139 683 166 791 65 259 49 308 -103 316 -53\n3 -86 -1 -124 -15z m-134 -829 c1 -65 4 -126 7 -135 5 -16 -5 -18 -106 -18\nl-112 0 32 43 c18 23 62 84 98 135 37 50 69 92 73 92 3 0 7 -53 8 -117z\"\n        />\n        <path\n          d=\"M5735 1654 c-118 -43 -144 -71 -235 -250 -36 -71 -73 -137 -84 -147\n-16 -17 -42 -69 -118 -236 -12 -27 -17 -54 -13 -70 4 -19 3 -22 -4 -11 -13 19\n-13 19 -56 -75 -20 -44 -57 -120 -82 -168 -26 -52 -43 -97 -40 -108 3 -10 1\n-17 -3 -14 -11 7 -40 -34 -40 -56 0 -9 -6 -22 -14 -28 -7 -6 -21 -33 -31 -59\n-10 -26 -23 -54 -30 -62 -7 -8 -20 -35 -28 -60 -12 -36 -12 -46 -2 -55 7 -5\n16 -23 19 -38 9 -38 32 -44 63 -16 14 13 68 83 119 156 69 96 99 130 110 126\n19 -7 104 11 199 43 39 12 84 26 102 29 36 7 30 29 53 -189 13 -114 26 -169\n40 -161 4 3 13 -2 20 -10 7 -8 23 -15 35 -15 25 0 35 30 35 105 0 89 134 780\n211 1088 35 141 38 228 10 256 -40 40 -159 53 -236 25z m-141 -846 l7 -138\n-106 0 c-58 0 -105 2 -105 5 0 3 31 47 68 97 38 51 81 112 97 136 15 23 29 41\n30 40 1 -2 5 -65 9 -140z\"\n        />\n      </g>\n    </svg>\n  );\n}\n","import BhaiLangLogo from \"./bhaiLangLogo\";\n\n\nexport default function Header() {\n  return (\n    <div className=\"relative overflow-hidden header flex justify-center items-center\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"relative z-10 pb-8 sm:pb-16 md:pb-20 lg:max-w-2xl lg:w-full lg:pb-28 xl:pb-32\">\n          <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\n            <div className=\"sm:text-center lg:text-left\">\n              <h1 className=\"hidden\">BhaiLang</h1>\n              <div className=\"p-4\">\n                <BhaiLangLogo />\n              </div>\n              <p className=\"mt-3 text-center text-base text-gray-300 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n                A toy programming language written in Typescript\n              </p>\n              <div className=\"prose text-center pt-4 pb-4\">\n                {\" \"}\n                <code className=\"language-js\">npm i -g bhailang</code>\n              </div>\n              <div className=\"mt-5 sm:mt-8 sm:flex justify-center\">\n                <div className=\"rounded-md shadow\">\n                  <a\n                    href=\"#playground\"\n                    className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-bhagwa-600 hover:bg-bhagwa-700 md:py-4 md:text-lg md:px-10\"\n                  >\n                    Playground\n                  </a>\n                </div>\n                <div className=\"mt-3 sm:mt-0 sm:ml-3\">\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://github.com/DulLabs/bhai-lang\"\n                    className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-bhagwa-700 bg-bhagwa-300 hover:bg-bhagwa-400 md:py-4 md:text-lg md:px-10\"\n                  >\n                    View Source\n                  </a>\n                </div>\n              </div>\n              <div className=\"text-center text-gray-300 pt-6\">\n                Made by\n                <a\n                  href=\"https://github.com/aniketsingh0104\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <span className=\"text-bhagwa-700\"> @aniketsingh0104 </span>\n                </a>\n                and\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href=\"https://github.com/ristri\"\n                >\n                  <span className=\"text-bhagwa-700\"> @ristri</span>\n                </a>\n              </div>\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import Head from \"next/head\";\n\nimport Code from \"../components/Code\";\nimport Documentation from \"../components/Documentation\";\nimport Footer from \"../components/Footer\";\nimport Header from \"../components/Header\";\n\n\nexport default function Docs() {\n  return (\n    <div className=\"bg-background\">\n      <Head>\n        <title>Bhailang - A toy programming language based on an inside joke</title>\n        <meta property=\"og:title\" content=\"Bhailang - A toy programming language based on an inside joke\" key=\"title\" />\n        <meta property=\"og:type\" content=\"website\" key=\"type\" />\n        <meta property=\"og:url\" content=\"https://bhailang.js.org\" key=\"url\" />\n        <meta property=\"og:description\" content=\"Bhailang is dynamically typed toy programming language, based on an inside joke, written in Typescript. Created by Aniket Singh and Rishabh Tripathi.\" key=\"description\" />\n        <meta name=\"description\" content=\"Bhailang is dynamically typed toy programming language, based on an inside joke, written in Typescript. Created by Aniket Singh and Rishabh Tripathi.\" />\n        <meta property=\"og:site_name\" content=\"Bhailang Documentation\" key=\"siteName\" />\n      </Head>\n      <Header />\n      <Code />\n      <Documentation />\n      <Footer />\n    </div>\n  );\n}\n\n","var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __markAsModule = (target) => __defProp(target, \"__esModule\", { value: true });\nvar __esm = (fn, res) => function __init() {\n  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;\n};\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __reExport = (target, module2, copyDefault, desc) => {\n  if (module2 && typeof module2 === \"object\" || typeof module2 === \"function\") {\n    for (let key of __getOwnPropNames(module2))\n      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== \"default\"))\n        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });\n  }\n  return target;\n};\nvar __toESM = (module2, isNodeMode) => {\n  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, \"default\", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);\n};\nvar __toCommonJS = /* @__PURE__ */ ((cache) => {\n  return (module2, temp) => {\n    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);\n  };\n})(typeof WeakMap !== \"undefined\" ? /* @__PURE__ */ new WeakMap() : 0);\n\n// ../../node_modules/tsup/assets/cjs_shims.js\nvar init_cjs_shims = __esm({\n  \"../../node_modules/tsup/assets/cjs_shims.js\"() {\n  }\n});\n\n// ../parser/dist/index.js\nvar require_dist = __commonJS({\n  \"../parser/dist/index.js\"(exports, module2) {\n    init_cjs_shims();\n    var __defProp2 = Object.defineProperty;\n    var __defProps = Object.defineProperties;\n    var __getOwnPropDesc2 = Object.getOwnPropertyDescriptor;\n    var __getOwnPropDescs = Object.getOwnPropertyDescriptors;\n    var __getOwnPropNames2 = Object.getOwnPropertyNames;\n    var __getOwnPropSymbols = Object.getOwnPropertySymbols;\n    var __hasOwnProp2 = Object.prototype.hasOwnProperty;\n    var __propIsEnum = Object.prototype.propertyIsEnumerable;\n    var __defNormalProp = (obj, key, value) => key in obj ? __defProp2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\n    var __spreadValues = (a, b) => {\n      for (var prop in b || (b = {}))\n        if (__hasOwnProp2.call(b, prop))\n          __defNormalProp(a, prop, b[prop]);\n      if (__getOwnPropSymbols)\n        for (var prop of __getOwnPropSymbols(b)) {\n          if (__propIsEnum.call(b, prop))\n            __defNormalProp(a, prop, b[prop]);\n        }\n      return a;\n    };\n    var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n    var __markAsModule2 = (target) => __defProp2(target, \"__esModule\", { value: true });\n    var __export2 = (target, all) => {\n      for (var name in all)\n        __defProp2(target, name, { get: all[name], enumerable: true });\n    };\n    var __reExport2 = (target, module22, copyDefault, desc) => {\n      if (module22 && typeof module22 === \"object\" || typeof module22 === \"function\") {\n        for (let key of __getOwnPropNames2(module22))\n          if (!__hasOwnProp2.call(target, key) && (copyDefault || key !== \"default\"))\n            __defProp2(target, key, { get: () => module22[key], enumerable: !(desc = __getOwnPropDesc2(module22, key)) || desc.enumerable });\n      }\n      return target;\n    };\n    var __toCommonJS2 = /* @__PURE__ */ ((cache) => {\n      return (module22, temp) => {\n        return cache && cache.get(module22) || (temp = __reExport2(__markAsModule2({}), module22, 1), cache && cache.set(module22, temp), temp);\n      };\n    })(typeof WeakMap !== \"undefined\" ? /* @__PURE__ */ new WeakMap() : 0);\n    var src_exports2 = {};\n    __export2(src_exports2, {\n      NodeType: () => NodeType4,\n      default: () => src_default2\n    });\n    var Parser = class {\n      constructor(tokenizer, program, tokenExecutor) {\n        this._tokenizer = tokenizer;\n        this._program = program;\n        this._tokenExecutor = tokenExecutor;\n        this._stringToTokenize = \"\";\n      }\n      parse(stringToTokenize) {\n        this._stringToTokenize = stringToTokenize;\n        this._tokenizer.initTokenizer(this._stringToTokenize);\n        this._tokenExecutor.setLookahead(this._tokenizer.getNextToken());\n        return this._program.getProgram();\n      }\n    };\n    var NodeType4 = {\n      AdditiveExpression: \"AdditiveExpression\",\n      MultiplicativeExpression: \"MultiplicativeExpression\",\n      PrimaryExpression: \"PrimaryExpression\",\n      ParanthesizedExpression: \"ParanthesizedExpression\",\n      IdentifierExpression: \"IdentifierExpression\",\n      AssignmentExpression: \"AssignmentExpression\",\n      BinaryExpression: \"BinaryExpression\",\n      LogicalExpression: \"LogicalExpression\",\n      LogicalANDExpression: \"LogicalANDExpression\",\n      LogicalORExpression: \"LogicalORExpression\",\n      RelationalExpression: \"RelationalExpression\",\n      EqualityExpression: \"EqualityExpression\",\n      BlockStatement: \"BlockStatement\",\n      EmptyStatement: \"EmptyStatement\",\n      ExpressionStatement: \"ExpressionStatement\",\n      InitStatement: \"InitStatement\",\n      PrintStatement: \"PrintStatement\",\n      IfStatement: \"IfStatement\",\n      WhileStatement: \"WhileStatement\",\n      BreakStatement: \"BreakStatement\",\n      ContinueStatement: \"ContinueStatement\",\n      VariableStatement: \"VariableStatement\",\n      BooleanLiteral: \"BooleanLiteral\",\n      NumericLiteral: \"NumericLiteral\",\n      StringLiteral: \"StringLiteral\",\n      NullLiteral: \"NullLiteral\",\n      VariableDeclaration: \"VariableDeclaration\",\n      Program: \"Program\"\n    };\n    var Program2 = class {\n      constructor(statementList) {\n        this._statementList = statementList;\n      }\n      getProgram() {\n        return {\n          type: NodeType4.Program,\n          body: this._statementList.getInitialStatementList()\n        };\n      }\n    };\n    var TokenTypes = {\n      NULL_TYPE: null,\n      HI_BHAI_TYPE: \"hi bhai\",\n      BYE_BHAI_TYPE: \"bye bhai\",\n      BOL_BHAI_TYPE: \"bol bhai\",\n      BHAI_YE_HAI_TYPE: \"bhai ye hai\",\n      AGAR_BHAI: \"agar bhai\",\n      WARNA_BHAI: \"warna bhai\",\n      NAHI_TO_BHAI: \"nahi to bhai\",\n      JAB_TAK_BHAI: \"jab tak bhai\",\n      BAS_KAR_BHAI: \"bas kar bhai\",\n      AGLA_DEKH_BHAI: \"agla dekh bhai\",\n      NALLA_TYPE: \"NALLA\",\n      SEMI_COLON_TYPE: \";\",\n      OPEN_CURLY_BRACE_TYPE: \"{\",\n      CLOSED_CURLY_BRACE_TYPE: \"}\",\n      OPEN_PARENTHESIS_TYPE: \"(\",\n      CLOSED_PARENTHESIS_TYPE: \")\",\n      COMMA_TYPE: \",\",\n      NUMBER_TYPE: \"NUMBER\",\n      IDENTIFIER_TYPE: \"IDENTIFIER\",\n      SIMPLE_ASSIGN_TYPE: \"SIMPLE_ASSIGN\",\n      COMPLEX_ASSIGN_TYPE: \"COMPLEX_ASSIGN\",\n      ADDITIVE_OPERATOR_TYPE: \"ADDITIVE_OPERATOR\",\n      MULTIPLICATIVE_OPERATOR_TYPE: \"MULTIPLICATIVE_OPERATOR\",\n      RELATIONAL_OPERATOR: \"RELATIONAL_OPERATOR\",\n      EQUALITY_OPERATOR: \"EQUALITY_OPERATOR\",\n      STRING_TYPE: \"STRING\",\n      BOOLEAN_TYPE: \"BOOLEAN\",\n      LOGICAL_AND: \"LOGICAL_AND\",\n      LOGICAL_OR: \"LOGICAL_OR\"\n    };\n    var SPEC = [\n      { regex: /^\\s+/, tokenType: TokenTypes.NULL_TYPE },\n      { regex: /^\\/\\/.*/, tokenType: TokenTypes.NULL_TYPE },\n      { regex: /^\\/\\*[\\s\\S]*?\\*\\//, tokenType: TokenTypes.NULL_TYPE },\n      { regex: /^;/, tokenType: TokenTypes.SEMI_COLON_TYPE },\n      { regex: /^\\{/, tokenType: TokenTypes.OPEN_CURLY_BRACE_TYPE },\n      { regex: /^\\}/, tokenType: TokenTypes.CLOSED_CURLY_BRACE_TYPE },\n      { regex: /^\\(/, tokenType: TokenTypes.OPEN_PARENTHESIS_TYPE },\n      { regex: /^\\)/, tokenType: TokenTypes.CLOSED_PARENTHESIS_TYPE },\n      { regex: /^,/, tokenType: TokenTypes.COMMA_TYPE },\n      { regex: /^\\bhi bhai\\b/, tokenType: TokenTypes.HI_BHAI_TYPE },\n      { regex: /^\\bbye bhai\\b/, tokenType: TokenTypes.BYE_BHAI_TYPE },\n      { regex: /^\\bbol bhai\\b/, tokenType: TokenTypes.BOL_BHAI_TYPE },\n      { regex: /^\\bbhai ye hai\\b/, tokenType: TokenTypes.BHAI_YE_HAI_TYPE },\n      { regex: /^\\bagar bhai\\b/, tokenType: TokenTypes.AGAR_BHAI },\n      { regex: /^\\bnahi to bhai\\b/, tokenType: TokenTypes.NAHI_TO_BHAI },\n      { regex: /^\\bwarna bhai\\b/, tokenType: TokenTypes.WARNA_BHAI },\n      { regex: /^\\bnalla\\b/, tokenType: TokenTypes.NALLA_TYPE },\n      { regex: /^\\bjab tak bhai\\b/, tokenType: TokenTypes.JAB_TAK_BHAI },\n      { regex: /^\\bbas kar bhai\\b/, tokenType: TokenTypes.BAS_KAR_BHAI },\n      { regex: /^\\bagla dekh bhai\\b/, tokenType: TokenTypes.AGLA_DEKH_BHAI },\n      { regex: /^[+-]?([\\d]*[.])?[\\d]+/, tokenType: TokenTypes.NUMBER_TYPE },\n      { regex: /^\\bsahi\\b/, tokenType: TokenTypes.BOOLEAN_TYPE },\n      { regex: /^\\bgalat\\b/, tokenType: TokenTypes.BOOLEAN_TYPE },\n      { regex: /^\\w+/, tokenType: TokenTypes.IDENTIFIER_TYPE },\n      { regex: /^[=!]=/, tokenType: TokenTypes.EQUALITY_OPERATOR },\n      { regex: /^=/, tokenType: TokenTypes.SIMPLE_ASSIGN_TYPE },\n      { regex: /^[\\*\\%\\/\\+\\-]=/, tokenType: TokenTypes.COMPLEX_ASSIGN_TYPE },\n      { regex: /^[+\\-]/, tokenType: TokenTypes.ADDITIVE_OPERATOR_TYPE },\n      { regex: /^[*\\/\\%]/, tokenType: TokenTypes.MULTIPLICATIVE_OPERATOR_TYPE },\n      { regex: /^[><]=?/, tokenType: TokenTypes.RELATIONAL_OPERATOR },\n      { regex: /^&&/, tokenType: TokenTypes.LOGICAL_AND },\n      { regex: /^\\|\\|/, tokenType: TokenTypes.LOGICAL_OR },\n      { regex: /^\"[^\"]*\"/, tokenType: TokenTypes.STRING_TYPE },\n      { regex: /^'[^']*'/, tokenType: TokenTypes.STRING_TYPE }\n    ];\n    var Statement = class {\n      constructor(tokenExecutor) {\n        this._tokenExecutor = tokenExecutor;\n      }\n      static getStatementImpl(lookahead) {\n        switch (lookahead.type) {\n          case TokenTypes.BOL_BHAI_TYPE:\n            return BhaiLangModule.getPrintStatement();\n          case TokenTypes.SEMI_COLON_TYPE:\n            return BhaiLangModule.getEmptyStatement();\n          case TokenTypes.OPEN_CURLY_BRACE_TYPE:\n            return BhaiLangModule.getBlockStatement();\n          case TokenTypes.BHAI_YE_HAI_TYPE:\n            return BhaiLangModule.getVariableStatement();\n          case TokenTypes.AGAR_BHAI:\n            return BhaiLangModule.getIfStatement();\n          case TokenTypes.JAB_TAK_BHAI:\n            return BhaiLangModule.getWhileStatement();\n          case TokenTypes.BAS_KAR_BHAI:\n            return BhaiLangModule.getBreakStatement();\n          case TokenTypes.AGLA_DEKH_BHAI:\n            return BhaiLangModule.getContinueStatement();\n          default:\n            return BhaiLangModule.getExpressionStatement();\n        }\n      }\n    };\n    var BlockStatement2 = class extends Statement {\n      constructor(tokenExecutor, statementList) {\n        super(tokenExecutor);\n        this._statementList = statementList;\n      }\n      getStatement() {\n        var _a;\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.OPEN_CURLY_BRACE_TYPE);\n        const body = ((_a = this._tokenExecutor.getLookahead()) == null ? void 0 : _a.type) === TokenTypes.CLOSED_CURLY_BRACE_TYPE ? [] : this._statementList.getStatementList(TokenTypes.CLOSED_CURLY_BRACE_TYPE);\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.CLOSED_CURLY_BRACE_TYPE);\n        this._tokenExecutor.eatOptionalSemiColonToken();\n        return {\n          type: NodeType4.BlockStatement,\n          body\n        };\n      }\n    };\n    var BreakStatement2 = class extends Statement {\n      getStatement() {\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.BAS_KAR_BHAI);\n        return {\n          type: NodeType4.BreakStatement\n        };\n      }\n    };\n    var ContinueStatement2 = class extends Statement {\n      getStatement() {\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.AGLA_DEKH_BHAI);\n        return {\n          type: NodeType4.ContinueStatement\n        };\n      }\n    };\n    var EmptyStatement2 = class extends Statement {\n      getStatement() {\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.SEMI_COLON_TYPE);\n        return {\n          type: NodeType4.EmptyStatement\n        };\n      }\n    };\n    var Expression = class {\n      constructor(tokenExecutor) {\n        this._tokenExecutor = tokenExecutor;\n      }\n      static getExpressionImpl(expressionType) {\n        switch (expressionType) {\n          case NodeType4.AdditiveExpression:\n            return BhaiLangModule.getAdditiveExpression();\n          case NodeType4.MultiplicativeExpression:\n            return BhaiLangModule.getMultiplicativeExpression();\n          case NodeType4.PrimaryExpression:\n            return BhaiLangModule.getPrimaryExpression();\n          case NodeType4.ParanthesizedExpression:\n            return BhaiLangModule.getParanthesizedExpression();\n          case NodeType4.AssignmentExpression:\n            return BhaiLangModule.getAssignmentExpression();\n          case NodeType4.EqualityExpression:\n            return BhaiLangModule.getEqualityExpression();\n          case NodeType4.LogicalANDExpression:\n            return BhaiLangModule.getLogicalANDExpression();\n          case NodeType4.LogicalORExpression:\n            return BhaiLangModule.getLogicalORExpression();\n          case NodeType4.RelationalExpression:\n            return BhaiLangModule.getRelationalExpression();\n          default:\n            return BhaiLangModule.getIndentifierExpression();\n        }\n      }\n      getBinaryExpression(downstreamExpressionType, operatorToken) {\n        return this._getExpression(downstreamExpressionType, operatorToken, NodeType4.BinaryExpression);\n      }\n      getLogicalExpression(downstreamExpressionType, operatorToken) {\n        return this._getExpression(downstreamExpressionType, operatorToken, NodeType4.LogicalExpression);\n      }\n      _getExpression(downstreamExpressionType, operatorToken, expressionType) {\n        var _a;\n        let left = Expression.getExpressionImpl(downstreamExpressionType).getExpression();\n        while (((_a = this._tokenExecutor.getLookahead()) == null ? void 0 : _a.type) === operatorToken) {\n          const operator = this._tokenExecutor.eatTokenAndForwardLookahead(operatorToken);\n          const right = Expression.getExpressionImpl(downstreamExpressionType).getExpression();\n          left = {\n            type: expressionType,\n            operator: operator.value,\n            left,\n            right\n          };\n        }\n        return left;\n      }\n    };\n    var AdditiveExpression = class extends Expression {\n      getExpression() {\n        return this.getBinaryExpression(NodeType4.MultiplicativeExpression, TokenTypes.ADDITIVE_OPERATOR_TYPE);\n      }\n    };\n    var AssignmentExpression2 = class extends Expression {\n      constructor() {\n        super(...arguments);\n        this._logicalORExpression = Expression.getExpressionImpl(NodeType4.LogicalORExpression);\n      }\n      getExpression() {\n        var _a;\n        const left = this._logicalORExpression.getExpression();\n        if (!this._isAssignmentOperator((_a = this._tokenExecutor.getLookahead()) == null ? void 0 : _a.type)) {\n          return left;\n        }\n        return {\n          type: NodeType4.AssignmentExpression,\n          operator: this._getAssignmentOperator().value,\n          left: this._checkValidAssignmentTarget(left),\n          right: this.getExpression()\n        };\n      }\n      _isAssignmentOperator(tokenType) {\n        return tokenType && (tokenType === TokenTypes.SIMPLE_ASSIGN_TYPE || tokenType === TokenTypes.COMPLEX_ASSIGN_TYPE);\n      }\n      _getAssignmentOperator() {\n        const lookahead = this._tokenExecutor.getLookahead();\n        if (!lookahead || lookahead.type === TokenTypes.SIMPLE_ASSIGN_TYPE)\n          return this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.SIMPLE_ASSIGN_TYPE);\n        return this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.COMPLEX_ASSIGN_TYPE);\n      }\n      _checkValidAssignmentTarget(node) {\n        if (node.type === NodeType4.IdentifierExpression)\n          return node;\n        throw new SyntaxError(\"Invalid left hand side in assignment expression\");\n      }\n    };\n    var EqualityExpression = class extends Expression {\n      getExpression() {\n        return this.getBinaryExpression(NodeType4.RelationalExpression, TokenTypes.EQUALITY_OPERATOR);\n      }\n    };\n    var IdentifierExpression2 = class extends Expression {\n      getExpression() {\n        const name = this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.IDENTIFIER_TYPE).value;\n        return {\n          type: NodeType4.IdentifierExpression,\n          name\n        };\n      }\n    };\n    var UnsupportedTypeException = class extends Error {\n      constructor(errorMessage) {\n        super(errorMessage);\n        this.name = \"UnsupportedTypeException\";\n        this.message = errorMessage;\n      }\n    };\n    var Literal = class {\n      constructor(tokenExecutor) {\n        this._tokenExecutor = tokenExecutor;\n      }\n      static getLiteralImpl(tokenType) {\n        switch (tokenType) {\n          case TokenTypes.NUMBER_TYPE:\n            return BhaiLangModule.getNumericLiteral();\n          case TokenTypes.BOOLEAN_TYPE:\n            return BhaiLangModule.getBooleanLiteral();\n          case TokenTypes.STRING_TYPE:\n            return BhaiLangModule.getStringLiteral();\n          case TokenTypes.NALLA_TYPE:\n            return BhaiLangModule.getNullLiteral();\n          default:\n            throw new UnsupportedTypeException(`Token type not supproted for literal: ${tokenType}`);\n        }\n      }\n    };\n    var BooleanLiteral2 = class extends Literal {\n      getLiteral() {\n        const token = this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.BOOLEAN_TYPE);\n        return {\n          type: NodeType4.BooleanLiteral,\n          value: token.value\n        };\n      }\n    };\n    var NullLiteral2 = class extends Literal {\n      getLiteral() {\n        return {\n          type: NodeType4.NullLiteral,\n          value: \"nalla\"\n        };\n      }\n    };\n    var NumericLiteral2 = class extends Literal {\n      getLiteral() {\n        const token = this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.NUMBER_TYPE);\n        return {\n          type: NodeType4.NumericLiteral,\n          value: Number(token.value)\n        };\n      }\n    };\n    var StringLiteral2 = class extends Literal {\n      getLiteral() {\n        const token = this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.STRING_TYPE);\n        return {\n          type: NodeType4.StringLiteral,\n          value: token.value.slice(1, -1)\n        };\n      }\n    };\n    var LogicalANDExpression = class extends Expression {\n      getExpression() {\n        return this.getLogicalExpression(NodeType4.EqualityExpression, TokenTypes.LOGICAL_AND);\n      }\n    };\n    var LogicalORExpression = class extends Expression {\n      getExpression() {\n        return this.getLogicalExpression(NodeType4.LogicalANDExpression, TokenTypes.LOGICAL_OR);\n      }\n    };\n    var MultiplicativeExpression = class extends Expression {\n      getExpression() {\n        return this.getBinaryExpression(NodeType4.PrimaryExpression, TokenTypes.MULTIPLICATIVE_OPERATOR_TYPE);\n      }\n    };\n    var ParanthesizedExpression = class extends Expression {\n      getExpression() {\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.OPEN_PARENTHESIS_TYPE);\n        const expression = Expression.getExpressionImpl(NodeType4.AssignmentExpression).getExpression();\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.CLOSED_PARENTHESIS_TYPE);\n        return expression;\n      }\n    };\n    var PrimaryExpression = class extends Expression {\n      getExpression() {\n        const token = this._tokenExecutor.getLookahead();\n        switch (token == null ? void 0 : token.type) {\n          case TokenTypes.OPEN_PARENTHESIS_TYPE:\n            return Expression.getExpressionImpl(NodeType4.ParanthesizedExpression).getExpression();\n          case TokenTypes.STRING_TYPE:\n          case TokenTypes.NUMBER_TYPE:\n          case TokenTypes.BOOLEAN_TYPE:\n            return Literal.getLiteralImpl(token.type).getLiteral();\n          case TokenTypes.NALLA_TYPE:\n            return this._getNallaLiteral();\n          default:\n            return this._getLeftHandSideExpression();\n        }\n      }\n      _getNallaLiteral() {\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.NALLA_TYPE);\n        return Literal.getLiteralImpl(TokenTypes.NALLA_TYPE).getLiteral();\n      }\n      _getLeftHandSideExpression() {\n        return Expression.getExpressionImpl(NodeType4.IdentifierExpression).getExpression();\n      }\n    };\n    var RelationalExpression = class extends Expression {\n      getExpression() {\n        return this.getBinaryExpression(NodeType4.AdditiveExpression, TokenTypes.RELATIONAL_OPERATOR);\n      }\n    };\n    var ExpressionStatement2 = class extends Statement {\n      getStatement() {\n        const expression = Expression.getExpressionImpl(NodeType4.AssignmentExpression).getExpression();\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.SEMI_COLON_TYPE);\n        return {\n          type: NodeType4.ExpressionStatement,\n          expression\n        };\n      }\n    };\n    var HANDLED_LOOP_TOKEN_TYPES = [TokenTypes.WARNA_BHAI, TokenTypes.NAHI_TO_BHAI];\n    var IfStatement2 = class extends Statement {\n      constructor(tokenExecutor) {\n        super(tokenExecutor);\n      }\n      getConditionalStatement(tokenType) {\n        this._tokenExecutor.eatTokenAndForwardLookahead(tokenType);\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.OPEN_PARENTHESIS_TYPE);\n        const test = Expression.getExpressionImpl(NodeType4.AssignmentExpression).getExpression();\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.CLOSED_PARENTHESIS_TYPE);\n        if (this._tokenExecutor.getLookahead() == null) {\n          throw new SyntaxError(`Unexpected end of \"${tokenType}\" statement`);\n        }\n        const consequent = Statement.getStatementImpl(this._tokenExecutor.getLookahead()).getStatement();\n        return {\n          type: NodeType4.IfStatement,\n          test,\n          consequent\n        };\n      }\n      getStatement() {\n        const ifStatement = this.getConditionalStatement(TokenTypes.AGAR_BHAI);\n        const alternates = [];\n        for (let lookahead = this._tokenExecutor.getLookahead(); lookahead !== null && HANDLED_LOOP_TOKEN_TYPES.includes(lookahead.type); lookahead = this._tokenExecutor.getLookahead()) {\n          if (lookahead.type === TokenTypes.WARNA_BHAI) {\n            alternates.push(this._tokenExecutor.eatTokenAndForwardLookahead(lookahead.type) && Statement.getStatementImpl(this._tokenExecutor.getLookahead()).getStatement());\n            break;\n          } else if (lookahead.type === TokenTypes.NAHI_TO_BHAI) {\n            alternates.push(this.getConditionalStatement(TokenTypes.NAHI_TO_BHAI));\n          }\n        }\n        return __spreadProps(__spreadValues({}, ifStatement), {\n          alternates\n        });\n      }\n    };\n    var InitStatement2 = class extends Statement {\n      constructor(tokenExecutor, statementList) {\n        super(tokenExecutor);\n        this._statementList = statementList;\n      }\n      getStatement() {\n        var _a;\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.HI_BHAI_TYPE);\n        this._tokenExecutor.eatOptionalSemiColonToken();\n        const body = ((_a = this._tokenExecutor.getLookahead()) == null ? void 0 : _a.type) !== TokenTypes.BYE_BHAI_TYPE ? this._statementList.getStatementList(TokenTypes.BYE_BHAI_TYPE) : [];\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.BYE_BHAI_TYPE);\n        this._tokenExecutor.eatOptionalSemiColonToken();\n        return {\n          type: NodeType4.InitStatement,\n          body\n        };\n      }\n    };\n    var PrintStatement2 = class extends Statement {\n      getStatement() {\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.BOL_BHAI_TYPE);\n        const expressions = this._getExpressionList();\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.SEMI_COLON_TYPE);\n        return {\n          type: NodeType4.PrintStatement,\n          expressions\n        };\n      }\n      _getExpressionList() {\n        var _a;\n        const expressions = [];\n        do {\n          expressions.push(this._getExpression());\n        } while (((_a = this._tokenExecutor.getLookahead()) == null ? void 0 : _a.type) === TokenTypes.COMMA_TYPE && this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.COMMA_TYPE));\n        return expressions;\n      }\n      _getExpression() {\n        return Expression.getExpressionImpl(NodeType4.AssignmentExpression).getExpression();\n      }\n    };\n    var VariableStatement2 = class extends Statement {\n      constructor(tokenExecutor, nullLiteral) {\n        super(tokenExecutor);\n        this._nullLiteral = nullLiteral;\n      }\n      getStatement() {\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.BHAI_YE_HAI_TYPE);\n        const declarations = this._getVariableDeclarationList();\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.SEMI_COLON_TYPE);\n        return {\n          type: NodeType4.VariableStatement,\n          declarations\n        };\n      }\n      _getVariableDeclarationList() {\n        var _a;\n        const declarations = [];\n        do {\n          declarations.push(this._getVariableDeclaration());\n        } while (((_a = this._tokenExecutor.getLookahead()) == null ? void 0 : _a.type) === TokenTypes.COMMA_TYPE && this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.COMMA_TYPE));\n        return declarations;\n      }\n      _getVariableDeclaration() {\n        var _a, _b;\n        const id = Expression.getExpressionImpl(NodeType4.IdentifierExpression).getExpression();\n        const init = ((_a = this._tokenExecutor.getLookahead()) == null ? void 0 : _a.type) !== TokenTypes.SEMI_COLON_TYPE && ((_b = this._tokenExecutor.getLookahead()) == null ? void 0 : _b.type) !== TokenTypes.COMMA_TYPE ? this._getVariableInitializer() : this._nullLiteral.getLiteral();\n        return {\n          type: NodeType4.VariableDeclaration,\n          id,\n          init\n        };\n      }\n      _getVariableInitializer() {\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.SIMPLE_ASSIGN_TYPE);\n        return Expression.getExpressionImpl(NodeType4.AssignmentExpression).getExpression();\n      }\n    };\n    var WhileStatement2 = class extends Statement {\n      getStatement() {\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.JAB_TAK_BHAI);\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.OPEN_PARENTHESIS_TYPE);\n        const test = Expression.getExpressionImpl(NodeType4.AssignmentExpression).getExpression();\n        this._tokenExecutor.eatTokenAndForwardLookahead(TokenTypes.CLOSED_PARENTHESIS_TYPE);\n        if (this._tokenExecutor.getLookahead() == null) {\n          throw new SyntaxError(`Unexpected end of \"jab tak bhai\" statement`);\n        }\n        const body = Statement.getStatementImpl(this._tokenExecutor.getLookahead()).getStatement();\n        return {\n          type: NodeType4.WhileStatement,\n          test,\n          body\n        };\n      }\n    };\n    var StatementList = class {\n      constructor(tokenExecutor) {\n        this._tokenExecutor = tokenExecutor;\n      }\n      getInitialStatementList() {\n        for (let lookahead = this._tokenExecutor.getLookahead(); lookahead !== null && lookahead.type !== TokenTypes.HI_BHAI_TYPE; lookahead = this._tokenExecutor.getLookahead()) {\n          this._tokenExecutor.eatTokenAndForwardLookahead(lookahead.type);\n        }\n        return BhaiLangModule.getInitStatement().getStatement();\n      }\n      getStatementList(stopLookaheadType) {\n        const statementlist = [];\n        for (let lookahead = this._tokenExecutor.getLookahead(); lookahead !== null && lookahead.type !== stopLookaheadType; lookahead = this._tokenExecutor.getLookahead()) {\n          statementlist.push(Statement.getStatementImpl(lookahead).getStatement());\n        }\n        return statementlist;\n      }\n    };\n    var TokenExecutor = class {\n      constructor(tokenizer) {\n        this._lookahead = null;\n        this._tokenizer = tokenizer;\n      }\n      eatTokenAndForwardLookahead(tokenType) {\n        const token = this._lookahead;\n        if (token == null) {\n          throw new SyntaxError(`Unexpected end of input, expected : \"${tokenType}\"`);\n        }\n        if (token.type !== tokenType) {\n          throw new SyntaxError(`kya kar rha hai tu??...Unexpected token: \"${token.value}\", expected : \"${tokenType}\"`);\n        }\n        this.setLookahead(this._tokenizer.getNextToken());\n        return token;\n      }\n      eatOptionalSemiColonToken() {\n        var _a;\n        if (((_a = this.getLookahead()) == null ? void 0 : _a.type) == TokenTypes.SEMI_COLON_TYPE)\n          this.eatTokenAndForwardLookahead(TokenTypes.SEMI_COLON_TYPE);\n      }\n      getLookahead() {\n        return this._lookahead;\n      }\n      setLookahead(lookahead) {\n        this._lookahead = lookahead;\n      }\n    };\n    var InvalidStateException2 = class extends Error {\n      constructor(errorMessage) {\n        super(errorMessage);\n        this.name = \"InvalidStateException\";\n        this.message = errorMessage;\n      }\n    };\n    var TokenizerImpl = class {\n      constructor(spec) {\n        this._string = void 0;\n        this._spec = spec;\n        this._cursor = 0;\n      }\n      initTokenizer(stringToTokenize) {\n        this._string = stringToTokenize;\n        this._cursor = 0;\n      }\n      isEOF() {\n        if (!this._string)\n          return true;\n        return this._cursor === this._string.length;\n      }\n      hasMoreTokens() {\n        if (!this._string)\n          return false;\n        return this._cursor < this._string.length;\n      }\n      getNextToken() {\n        if (!this._string)\n          throw new InvalidStateException2(\"Tokenizer is not initialized with string. Please call initTokenizer method first.\");\n        if (!this.hasMoreTokens()) {\n          return null;\n        }\n        const string = this._string.slice(this._cursor);\n        for (const { regex, tokenType } of this._spec) {\n          const tokenValue = this._matched(regex, string);\n          if (tokenValue === null) {\n            continue;\n          }\n          if (tokenType === null) {\n            return this.getNextToken();\n          }\n          return {\n            type: tokenType,\n            value: tokenValue\n          };\n        }\n        throw new SyntaxError(`Kya kar rha hai tu??...Unexpected token: \"${string[0]}\"`);\n      }\n      _matched(regex, string) {\n        const matched = regex.exec(string);\n        if (matched === null) {\n          return null;\n        }\n        this._cursor += matched[0].length;\n        return matched[0];\n      }\n    };\n    var BhaiLangModule = class {\n      static getTokenizer() {\n        if (!this._tokenizer)\n          this._tokenizer = new TokenizerImpl(SPEC);\n        return this._tokenizer;\n      }\n      static getTokenExecutor() {\n        if (!this._tokenExecutor)\n          this._tokenExecutor = new TokenExecutor(this.getTokenizer());\n        return this._tokenExecutor;\n      }\n      static getStatementList() {\n        if (!this._statementList)\n          this._statementList = new StatementList(this.getTokenExecutor());\n        return this._statementList;\n      }\n      static getInitStatement() {\n        if (!this._initStatement)\n          this._initStatement = new InitStatement2(this.getTokenExecutor(), this.getStatementList());\n        return this._initStatement;\n      }\n      static getPrintStatement() {\n        if (!this._printStatement) {\n          this._printStatement = new PrintStatement2(this.getTokenExecutor());\n        }\n        return this._printStatement;\n      }\n      static getIfStatement() {\n        if (!this._ifStatement) {\n          this._ifStatement = new IfStatement2(this.getTokenExecutor());\n        }\n        return this._ifStatement;\n      }\n      static getBreakStatement() {\n        if (!this._breakStatement) {\n          this._breakStatement = new BreakStatement2(this.getTokenExecutor());\n        }\n        return this._breakStatement;\n      }\n      static getContinueStatement() {\n        if (!this._continueStatement) {\n          this._continueStatement = new ContinueStatement2(this.getTokenExecutor());\n        }\n        return this._continueStatement;\n      }\n      static getWhileStatement() {\n        if (!this._whileStatement) {\n          this._whileStatement = new WhileStatement2(this.getTokenExecutor());\n        }\n        return this._whileStatement;\n      }\n      static getExpressionStatement() {\n        if (!this._expresionStatement) {\n          this._expresionStatement = new ExpressionStatement2(this.getTokenExecutor());\n        }\n        return this._expresionStatement;\n      }\n      static getEmptyStatement() {\n        if (!this._emptyStatement) {\n          this._emptyStatement = new EmptyStatement2(this.getTokenExecutor());\n        }\n        return this._emptyStatement;\n      }\n      static getBlockStatement() {\n        if (!this._blockStatement) {\n          this._blockStatement = new BlockStatement2(this.getTokenExecutor(), this.getStatementList());\n        }\n        return this._blockStatement;\n      }\n      static getVariableStatement() {\n        if (!this._variableStatement)\n          this._variableStatement = new VariableStatement2(this.getTokenExecutor(), this.getNullLiteral());\n        return this._variableStatement;\n      }\n      static getAdditiveExpression() {\n        if (!this._additiveExpression) {\n          this._additiveExpression = new AdditiveExpression(this.getTokenExecutor());\n        }\n        return this._additiveExpression;\n      }\n      static getMultiplicativeExpression() {\n        if (!this._multiplicativeExpression) {\n          this._multiplicativeExpression = new MultiplicativeExpression(this.getTokenExecutor());\n        }\n        return this._multiplicativeExpression;\n      }\n      static getPrimaryExpression() {\n        if (!this._primaryExpression) {\n          this._primaryExpression = new PrimaryExpression(this.getTokenExecutor());\n        }\n        return this._primaryExpression;\n      }\n      static getParanthesizedExpression() {\n        if (!this._paranthesizedExpression) {\n          this._paranthesizedExpression = new ParanthesizedExpression(this.getTokenExecutor());\n        }\n        return this._paranthesizedExpression;\n      }\n      static getIndentifierExpression() {\n        if (!this._idetifierExpression)\n          this._idetifierExpression = new IdentifierExpression2(this.getTokenExecutor());\n        return this._idetifierExpression;\n      }\n      static getEqualityExpression() {\n        if (!this._equalityExpression)\n          this._equalityExpression = new EqualityExpression(this.getTokenExecutor());\n        return this._equalityExpression;\n      }\n      static getLogicalANDExpression() {\n        if (!this._logicalANDExpression)\n          this._logicalANDExpression = new LogicalANDExpression(this.getTokenExecutor());\n        return this._logicalANDExpression;\n      }\n      static getLogicalORExpression() {\n        if (!this._logicalORExpression)\n          this._logicalORExpression = new LogicalORExpression(this.getTokenExecutor());\n        return this._logicalORExpression;\n      }\n      static getRelationalExpression() {\n        if (!this._relationalExpression)\n          this._relationalExpression = new RelationalExpression(this.getTokenExecutor());\n        return this._relationalExpression;\n      }\n      static getAssignmentExpression() {\n        if (!this._assignmentExpression)\n          this._assignmentExpression = new AssignmentExpression2(this.getTokenExecutor());\n        return this._assignmentExpression;\n      }\n      static getNumericLiteral() {\n        if (!this._numericLiteral) {\n          this._numericLiteral = new NumericLiteral2(this.getTokenExecutor());\n        }\n        return this._numericLiteral;\n      }\n      static getStringLiteral() {\n        if (!this._stringLiteral) {\n          this._stringLiteral = new StringLiteral2(this.getTokenExecutor());\n        }\n        return this._stringLiteral;\n      }\n      static getBooleanLiteral() {\n        if (!this._booleanLiteral) {\n          this._booleanLiteral = new BooleanLiteral2(this.getTokenExecutor());\n        }\n        return this._booleanLiteral;\n      }\n      static getNullLiteral() {\n        if (!this._nullLiteral) {\n          this._nullLiteral = new NullLiteral2(this.getTokenExecutor());\n        }\n        return this._nullLiteral;\n      }\n      static getProgram() {\n        if (!this._program)\n          this._program = new Program2(this.getStatementList());\n        return this._program;\n      }\n      static getParser() {\n        if (!this._parser)\n          this._parser = new Parser(this.getTokenizer(), this.getProgram(), this.getTokenExecutor());\n        return this._parser;\n      }\n    };\n    var src_default2 = BhaiLangModule.getParser();\n    module2.exports = __toCommonJS2(src_exports2);\n  }\n});\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RuntimeException: () => RuntimeException,\n  default: () => src_default\n});\ninit_cjs_shims();\n\n// src/module/interpreterModule.ts\ninit_cjs_shims();\nvar import_bhai_lang_parser3 = __toESM(require_dist());\n\n// src/components/interpreter.ts\ninit_cjs_shims();\n\n// src/components/scope.ts\ninit_cjs_shims();\n\n// src/exceptions/runtimeException.ts\ninit_cjs_shims();\nvar RuntimeException = class extends Error {\n  constructor(errorMessage) {\n    const errorName = \"RuntimeException\";\n    errorMessage = errorName + \": \" + errorMessage;\n    super(errorMessage);\n    this.name = errorName;\n    this.message = `${errorMessage}`;\n  }\n};\n\n// src/components/scope.ts\nvar Scope = class {\n  constructor(parentScope) {\n    this._variables = /* @__PURE__ */ new Map();\n    this._isLoop = false;\n    this._isBreakStatement = false;\n    this._isContinueStatement = false;\n    this._parentScope = parentScope;\n  }\n  isLoop() {\n    return this._isLoop;\n  }\n  setLoop(isLoop) {\n    this._isLoop = isLoop;\n  }\n  setBreakStatement(isBreakStatement) {\n    this._isBreakStatement = isBreakStatement;\n  }\n  setContinueStatement(isContinueStatement) {\n    this._isContinueStatement = isContinueStatement;\n  }\n  isBreakStatement() {\n    return this._isBreakStatement;\n  }\n  isContinueStatement() {\n    return this._isContinueStatement;\n  }\n  get(identifier) {\n    if (this._variables.has(identifier)) {\n      return this._variables.get(identifier);\n    }\n    if (this._parentScope !== null) {\n      return this._parentScope.get(identifier);\n    }\n    throw new RuntimeException(`Variable \"${identifier}\" bana to le pehle.`);\n  }\n  assign(identifier, value) {\n    if (this._variables.has(identifier)) {\n      this._variables.set(identifier, value);\n      return;\n    }\n    if (this._parentScope !== null) {\n      this._parentScope.assign(identifier, value);\n      return;\n    }\n    throw new RuntimeException(`Variable \"${identifier}\" bana to le pehle fir assign karna.`);\n  }\n  declare(identifier, value) {\n    if (this._variables.has(identifier)) {\n      throw new RuntimeException(`Variable \"${identifier}\" pehle se exist karta hai bhai. Check karle.`);\n    }\n    this._variables.set(identifier, value);\n  }\n};\n\n// src/components/interpreter.ts\nvar Interpreter = class {\n  constructor(parserObj, scope) {\n    this._parser = parserObj;\n    this._scope = scope;\n  }\n  interpret(code) {\n    try {\n      const ast = this._parser.parse(code);\n      InterpreterModule.getVisitor(ast.type).visitNode(ast);\n    } finally {\n      InterpreterModule.setCurrentScope(new Scope(null));\n    }\n  }\n};\n\n// src/components/visitor/assignmentExpression.ts\ninit_cjs_shims();\n\n// src/exceptions/invalidStateException.ts\ninit_cjs_shims();\nvar InvalidStateException = class extends Error {\n  constructor(errorMessage) {\n    super(errorMessage);\n    this.name = \"InvalidStateException\";\n    this.message = errorMessage;\n  }\n};\n\n// src/exceptions/nallaPointerException.ts\ninit_cjs_shims();\nvar NallaPointerException = class extends Error {\n  constructor(errorMessage) {\n    const errorName = \"NallaPointerException\";\n    errorMessage = errorName + \": \" + errorMessage;\n    super(errorMessage);\n    this.name = errorName;\n    this.message = errorMessage;\n  }\n};\n\n// src/helpers/index.ts\ninit_cjs_shims();\nfunction checkNumberOperands(operands) {\n  return typeof operands.left === \"number\" && typeof operands.right === \"number\";\n}\nfunction checkStringOperands(operands) {\n  return typeof operands.left === \"string\" && typeof operands.right === \"string\";\n}\nfunction checkNumberAndStringOperands(operands) {\n  return typeof operands.left === \"string\" && typeof operands.right === \"number\" || typeof operands.right === \"string\" && typeof operands.left === \"number\";\n}\nfunction getOperationValue(operands, operator) {\n  const exception = new RuntimeException(`Ye kya kar raha hai: \"${operator}\" ke sath \"${typeof operands.left}\" aur \"${typeof operands.right}\" nahi jamte.`);\n  switch (operator) {\n    case \"=\":\n      return operands.right;\n    case \"+=\":\n    case \"+\":\n      if (checkNumberOperands(operands)) {\n        return operands.left + operands.right;\n      }\n      if (checkStringOperands(operands)) {\n        return operands.left + operands.right;\n      }\n      if (checkNumberAndStringOperands(operands)) {\n        return operands.left.toString() + operands.right.toString();\n      }\n      throw exception;\n    case \"-=\":\n    case \"-\":\n      if (checkNumberOperands(operands)) {\n        return operands.left - operands.right;\n      }\n      throw exception;\n    case \"*=\":\n    case \"*\":\n      if (checkNumberOperands(operands)) {\n        return operands.left * operands.right;\n      }\n      throw exception;\n    case \"/=\":\n    case \"/\":\n      if (operands.right === 0) {\n        throw new RuntimeException(`Kya kar rha hai tu??...zero se divide ni karte`);\n      }\n      if (checkNumberOperands(operands)) {\n        return operands.left / operands.right;\n      }\n      throw exception;\n    case \"%=\":\n    case \"%\":\n      if (checkNumberOperands(operands)) {\n        return operands.left % operands.right;\n      }\n      throw exception;\n    case \"==\":\n      return operands.left === operands.right;\n    case \"!=\":\n      return operands.left !== operands.right;\n    case \">\":\n      if (checkNumberOperands(operands)) {\n        return operands.left > operands.right;\n      }\n      throw exception;\n    case \"<\":\n      if (checkNumberOperands(operands)) {\n        return operands.left < operands.right;\n      }\n      throw exception;\n    case \">=\":\n      if (checkNumberOperands(operands)) {\n        return operands.left >= operands.right;\n      }\n      throw exception;\n    case \"<=\":\n      if (checkNumberOperands(operands)) {\n        return operands.left <= operands.right;\n      }\n      throw exception;\n    case \"&&\":\n      return operands.left && operands.right;\n    case \"||\":\n      return operands.left || operands.right;\n    default:\n      throw new InvalidStateException(`Unsupported operator: ${operator}`);\n  }\n}\n\n// src/components/visitor/assignmentExpression.ts\nvar AssignmentExpression = class {\n  visitNode(node) {\n    if (!node.left)\n      throw new InvalidStateException(`left node not present while executing: ${node.type}`);\n    let identifier = node.left.name;\n    let value;\n    const currentScope = InterpreterModule.getCurrentScope();\n    if (node.right) {\n      value = InterpreterModule.getVisitor(node.right.type).visitNode(node.right);\n    }\n    if (identifier && node.operator) {\n      const left = currentScope.get(identifier);\n      if (left === null && node.operator !== \"=\")\n        throw new NallaPointerException(`Nalla operand ni jamta \"${node.operator}\" ke sath`);\n      if ((left === true || left === false) && node.operator !== \"=\")\n        throw new RuntimeException(`Boolean operand ni jamta \"${node.operator}\" ke sath`);\n      const newValue = getOperationValue({ left: currentScope.get(identifier), right: value }, node.operator);\n      currentScope.assign(identifier, newValue);\n      return currentScope.get(identifier);\n    }\n  }\n};\n\n// src/components/visitor/binaryExpression.ts\ninit_cjs_shims();\nvar import_bhai_lang_parser = __toESM(require_dist());\nvar BinaryExpression = class {\n  visitNode(node) {\n    if (!node.left || !node.right || !node.operator) {\n      throw new InvalidStateException(`Left , right or operator not found for: ${node.type}`);\n    }\n    let left, right;\n    if (node.type == import_bhai_lang_parser.NodeType.BinaryExpression) {\n      if (node.operator !== \"==\" && node.operator !== \"!=\") {\n        this._checkNalla(node);\n        this._checkBoolean(node);\n      }\n      left = this._getNodeValue(node.left);\n      right = this._getNodeValue(node.right);\n    } else if (node.type == import_bhai_lang_parser.NodeType.LogicalExpression) {\n      this._checkNalla(node);\n      left = node.left.type == import_bhai_lang_parser.NodeType.BooleanLiteral ? node.left.value == \"sahi\" ? true : false : InterpreterModule.getVisitor(node.left.type).visitNode(node.left);\n      right = node.right.type == import_bhai_lang_parser.NodeType.BooleanLiteral ? node.right.value == \"sahi\" ? true : false : InterpreterModule.getVisitor(node.right.type).visitNode(node.right);\n    }\n    return getOperationValue({ left, right }, node.operator);\n  }\n  _checkNalla(node) {\n    if (!node.left || !node.right || !node.operator) {\n      throw new InvalidStateException(`Left , right or operator not found for: ${node.type}`);\n    }\n    const nallaException = new NallaPointerException(`Nalla operand ni jamta \"${node.operator}\" ke sath`);\n    if (node.left.type === import_bhai_lang_parser.NodeType.NullLiteral || node.right.type === import_bhai_lang_parser.NodeType.NullLiteral)\n      throw nallaException;\n    if (node.left.type === import_bhai_lang_parser.NodeType.IdentifierExpression && node.left.name) {\n      const value = InterpreterModule.getCurrentScope().get(node.left.name);\n      if (value === null)\n        throw nallaException;\n    }\n    if (node.right.type === import_bhai_lang_parser.NodeType.IdentifierExpression && node.right.name) {\n      const value = InterpreterModule.getCurrentScope().get(node.right.name);\n      if (value === null)\n        throw nallaException;\n    }\n  }\n  _checkBoolean(node) {\n    if (!node.left || !node.right || !node.operator) {\n      throw new InvalidStateException(`Left , right or operator not found for: ${node.type}`);\n    }\n    const runtimeException = new RuntimeException(`Kya kar rha hai tu??..Boolean operand ni jamta \"${node.operator}\" ke sath`);\n    if (node.left.type === import_bhai_lang_parser.NodeType.BooleanLiteral || node.right.type === import_bhai_lang_parser.NodeType.BooleanLiteral)\n      throw runtimeException;\n    if (node.left.type === import_bhai_lang_parser.NodeType.IdentifierExpression && node.left.name) {\n      const value = InterpreterModule.getCurrentScope().get(node.left.name);\n      if (value === true || value === false)\n        throw runtimeException;\n    }\n    if (node.right.type === import_bhai_lang_parser.NodeType.IdentifierExpression && node.right.name) {\n      const value = InterpreterModule.getCurrentScope().get(node.right.name);\n      if (value === true || value === false)\n        throw runtimeException;\n    }\n  }\n  _getNodeValue(node) {\n    if (node.type === import_bhai_lang_parser.NodeType.NullLiteral)\n      return null;\n    if (node.type === import_bhai_lang_parser.NodeType.BooleanLiteral) {\n      return node.value === \"sahi\" ? true : false;\n    }\n    if (node.type === import_bhai_lang_parser.NodeType.IdentifierExpression && node.name)\n      return InterpreterModule.getCurrentScope().get(node.name);\n    return InterpreterModule.getVisitor(node.type).visitNode(node);\n  }\n};\n\n// src/components/visitor/blockStatement.ts\ninit_cjs_shims();\nvar BlockStatement = class {\n  visitNode(node) {\n    const parentScope = InterpreterModule.getCurrentScope();\n    InterpreterModule.setCurrentScope(new Scope(parentScope));\n    InterpreterModule.getCurrentScope().setLoop(parentScope.isLoop());\n    if (Array.isArray(node.body)) {\n      node.body.every((statement) => {\n        if (InterpreterModule.getCurrentScope().isBreakStatement()) {\n          return false;\n        }\n        if (InterpreterModule.getCurrentScope().isContinueStatement()) {\n          parentScope.setContinueStatement(true);\n          return false;\n        }\n        InterpreterModule.getVisitor(statement.type).visitNode(statement);\n        return true;\n      });\n    }\n    parentScope.setBreakStatement(InterpreterModule.getCurrentScope().isBreakStatement());\n    InterpreterModule.setCurrentScope(parentScope);\n  }\n};\n\n// src/components/visitor/booleanLiteral.ts\ninit_cjs_shims();\nvar BooleanLiteral = class {\n  visitNode(node) {\n    return node.value;\n  }\n};\n\n// src/components/visitor/breakStatement.ts\ninit_cjs_shims();\nvar BreakStatement = class {\n  visitNode() {\n    if (InterpreterModule.getCurrentScope().isLoop()) {\n      InterpreterModule.getCurrentScope().setBreakStatement(true);\n    } else {\n      throw new RuntimeException(`Kya \"bas kar bhai\"?? Loop kahan hai?`);\n    }\n  }\n};\n\n// src/components/visitor/continueStatement.ts\ninit_cjs_shims();\nvar ContinueStatement = class {\n  visitNode() {\n    if (InterpreterModule.getCurrentScope().isLoop()) {\n      InterpreterModule.getCurrentScope().setContinueStatement(true);\n    } else {\n      throw new RuntimeException(`Kha \"agla dekh bhai\"?? Loop kidhar hai?`);\n    }\n  }\n};\n\n// src/components/visitor/emptyStatement.ts\ninit_cjs_shims();\nvar EmptyStatement = class {\n  visitNode(_) {\n    return;\n  }\n};\n\n// src/components/visitor/expressionStatement.ts\ninit_cjs_shims();\nvar ExpressionStatement = class {\n  visitNode(node) {\n    if (node.expression) {\n      InterpreterModule.getVisitor(node.expression.type).visitNode(node.expression);\n    }\n  }\n};\n\n// src/components/visitor/identifierExpression.ts\ninit_cjs_shims();\nvar IdentifierExpression = class {\n  visitNode(node) {\n    if (!node.name) {\n      throw new InvalidStateException(`Invalid node name for: ${node.type}`);\n    }\n    let value = InterpreterModule.getCurrentScope().get(node.name);\n    if (value === null)\n      value = \"nalla\";\n    else if (value === true)\n      value = \"sahi\";\n    else if (value === false)\n      value = \"galat\";\n    return value;\n  }\n};\n\n// src/components/visitor/ifStatement.ts\ninit_cjs_shims();\nvar IfStatement = class {\n  evaluateNode(node, parentScope) {\n    if (node) {\n      InterpreterModule.setCurrentScope(new Scope(parentScope));\n      InterpreterModule.getCurrentScope().setLoop(parentScope.isLoop());\n      InterpreterModule.getVisitor(node.type).visitNode(node);\n    }\n  }\n  visitNode(node) {\n    const test = node.test;\n    const parentScope = InterpreterModule.getCurrentScope();\n    if (test) {\n      const testResult = InterpreterModule.getVisitor(test.type).visitNode(test);\n      if (testResult === true || testResult === \"sahi\") {\n        this.evaluateNode(node.consequent, parentScope);\n      } else {\n        const alternates = node.alternates;\n        if (alternates && alternates.length > 0) {\n          for (var alternate of alternates) {\n            const alternateTest = alternate.test;\n            if (!alternateTest) {\n              this.evaluateNode(alternate, parentScope);\n              break;\n            } else {\n              const testResult2 = InterpreterModule.getVisitor(alternateTest.type).visitNode(alternateTest);\n              if (testResult2 === true || testResult2 === \"sahi\") {\n                this.evaluateNode(alternate.consequent, parentScope);\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    parentScope.setBreakStatement(InterpreterModule.getCurrentScope().isBreakStatement());\n    parentScope.setContinueStatement(InterpreterModule.getCurrentScope().isContinueStatement());\n    InterpreterModule.setCurrentScope(parentScope);\n  }\n};\n\n// src/components/visitor/initStatement.ts\ninit_cjs_shims();\nvar InitStatement = class {\n  visitNode(node) {\n    if (Array.isArray(node.body)) {\n      node.body.forEach((statement) => {\n        InterpreterModule.getVisitor(statement.type).visitNode(statement);\n      });\n    }\n  }\n};\n\n// src/components/visitor/nullLiteral.ts\ninit_cjs_shims();\nvar NullLiteral = class {\n  visitNode(node) {\n    return node.value;\n  }\n};\n\n// src/components/visitor/numericLiteral.ts\ninit_cjs_shims();\nvar NumericLiteral = class {\n  visitNode(node) {\n    return node.value;\n  }\n};\n\n// src/components/visitor/printStatement.ts\ninit_cjs_shims();\nvar PrintStatement = class {\n  visitNode(node) {\n    if (!node.expressions)\n      throw new InvalidStateException(`No expressions to print: ${node.expressions}`);\n    const value = node.expressions.map((expression) => {\n      let currentNodeOutput = InterpreterModule.getVisitor(expression.type).visitNode(expression);\n      if (currentNodeOutput === true)\n        currentNodeOutput = \"sahi\";\n      else if (currentNodeOutput === false)\n        currentNodeOutput = \"galat\";\n      return currentNodeOutput;\n    }).join(\" \");\n    console.log(value);\n  }\n};\n\n// src/components/visitor/program.ts\ninit_cjs_shims();\nvar Program = class {\n  visitNode(node) {\n    if (Array.isArray(node.body) || !node.body)\n      throw new InvalidStateException(`Invalid node body for : ${node.type}`);\n    InterpreterModule.getVisitor(node.body.type).visitNode(node.body);\n  }\n};\n\n// src/components/visitor/stringLiteral.ts\ninit_cjs_shims();\nvar StringLiteral = class {\n  visitNode(node) {\n    return node.value;\n  }\n};\n\n// src/components/visitor/variableDeclaration.ts\ninit_cjs_shims();\nvar import_bhai_lang_parser2 = __toESM(require_dist());\nvar VariableDeclaration = class {\n  visitNode(node) {\n    if (!node.id || !node.init) {\n      throw new InvalidStateException(`id or init not found for ${node.type}`);\n    }\n    const identifier = node.id.name;\n    let value;\n    if (node.init.type === import_bhai_lang_parser2.NodeType.NullLiteral)\n      value = null;\n    else if (node.init.type === import_bhai_lang_parser2.NodeType.BooleanLiteral)\n      value = node.init.value === \"sahi\" ? true : false;\n    else\n      value = InterpreterModule.getVisitor(node.init.type).visitNode(node.init);\n    const currentScope = InterpreterModule.getCurrentScope();\n    if (identifier) {\n      currentScope.declare(identifier, value);\n    }\n  }\n};\n\n// src/components/visitor/variableStatement.ts\ninit_cjs_shims();\nvar VariableStatement = class {\n  visitNode(node) {\n    if (!node.declarations)\n      throw new InvalidStateException(`variable declarations in variable statement is not present: ${node.declarations}`);\n    node.declarations.forEach((declaration) => {\n      InterpreterModule.getVisitor(declaration.type).visitNode(declaration);\n    });\n  }\n};\n\n// src/components/visitor/whileStatement.ts\ninit_cjs_shims();\nvar WhileStatement = class {\n  visitNode(node) {\n    const test = node.test;\n    if (test) {\n      const getConditionValue = () => InterpreterModule.getVisitor(test.type).visitNode(test);\n      const parentScope = InterpreterModule.getCurrentScope();\n      InterpreterModule.setCurrentScope(new Scope(parentScope));\n      InterpreterModule.getCurrentScope().setLoop(true);\n      for (let testResult = getConditionValue(), executions = 0; testResult === true || testResult === \"sahi\"; testResult = getConditionValue(), executions++) {\n        if (InterpreterModule.getCurrentScope().isBreakStatement()) {\n          break;\n        }\n        if (executions > 5e3) {\n          throw new RuntimeException(\"Bohot jyada hi chale jaa rha hai loop\");\n        }\n        if (InterpreterModule.getCurrentScope().isContinueStatement()) {\n          InterpreterModule.getCurrentScope().setContinueStatement(false);\n          continue;\n        }\n        const body = node.body;\n        if (body && !Array.isArray(body)) {\n          InterpreterModule.getVisitor(body.type).visitNode(body);\n        }\n      }\n      InterpreterModule.setCurrentScope(parentScope);\n    }\n  }\n};\n\n// src/module/interpreterModule.ts\nvar _InterpreterModule = class {\n  static getVisitor(nodeType) {\n    const visitor = _InterpreterModule._visitorMap[nodeType];\n    if (!visitor)\n      throw new InvalidStateException(`Couldn't find any visitor object for nodeType: ${nodeType}`);\n    return visitor;\n  }\n  static getInterpreter() {\n    var _a;\n    this._interpreter = (_a = this._interpreter) != null ? _a : new Interpreter(import_bhai_lang_parser3.default, this.getCurrentScope());\n    return this._interpreter;\n  }\n  static getCurrentScope() {\n    var _a;\n    this._currentScope = (_a = this._currentScope) != null ? _a : new Scope(null);\n    return this._currentScope;\n  }\n  static setCurrentScope(scope) {\n    this._currentScope = scope;\n  }\n};\nvar InterpreterModule = _InterpreterModule;\nInterpreterModule._visitorMap = {\n  [import_bhai_lang_parser3.NodeType.Program]: new Program(),\n  [import_bhai_lang_parser3.NodeType.InitStatement]: new InitStatement(),\n  [import_bhai_lang_parser3.NodeType.PrintStatement]: new PrintStatement(),\n  [import_bhai_lang_parser3.NodeType.EmptyStatement]: new EmptyStatement(),\n  [import_bhai_lang_parser3.NodeType.BlockStatement]: new BlockStatement(),\n  [import_bhai_lang_parser3.NodeType.VariableStatement]: new VariableStatement(),\n  [import_bhai_lang_parser3.NodeType.IdentifierExpression]: new IdentifierExpression(),\n  [import_bhai_lang_parser3.NodeType.VariableDeclaration]: new VariableDeclaration(),\n  [import_bhai_lang_parser3.NodeType.AssignmentExpression]: new AssignmentExpression(),\n  [import_bhai_lang_parser3.NodeType.ExpressionStatement]: new ExpressionStatement(),\n  [import_bhai_lang_parser3.NodeType.BinaryExpression]: new BinaryExpression(),\n  [import_bhai_lang_parser3.NodeType.LogicalExpression]: new BinaryExpression(),\n  [import_bhai_lang_parser3.NodeType.StringLiteral]: new StringLiteral(),\n  [import_bhai_lang_parser3.NodeType.NumericLiteral]: new NumericLiteral(),\n  [import_bhai_lang_parser3.NodeType.BooleanLiteral]: new BooleanLiteral(),\n  [import_bhai_lang_parser3.NodeType.NullLiteral]: new NullLiteral(),\n  [import_bhai_lang_parser3.NodeType.IfStatement]: new IfStatement(),\n  [import_bhai_lang_parser3.NodeType.WhileStatement]: new WhileStatement(),\n  [import_bhai_lang_parser3.NodeType.BreakStatement]: new BreakStatement(),\n  [import_bhai_lang_parser3.NodeType.ContinueStatement]: new ContinueStatement()\n};\n\n// src/index.ts\nvar src_default = InterpreterModule.getInterpreter();\nmodule.exports = __toCommonJS(src_exports);\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RuntimeException\n});\n"],"names":["window","__NEXT_P","push","CopyIcon","props","svg","xmlns","className","fill","viewBox","stroke","strokeWidth","path","strokeLinecap","strokeLinejoin","d","TickIcon","CopyToClipboard","text","useState","copySuccess","setCopySuccess","buttonRef","useRef","useEffect","setTimeout","button","ref","onClick","e","navigator","stopPropagation","clipboard","writeText","then","catch","error","console","log","span","bhaiLangSyntax","languages","comment","pattern","lookbehind","greedy","string","keyword","boolean","number","operator","Prism","Editor","dynamic","ssr","CodeEditor","handleChange","code","div","value","onValueChange","highlight","highlightWithLineNumbers","input","split","map","line","i","join","padding","textareaClassName","id","style","fontFamily","fontSize","React","Terminal","output","isSuccess","terminalRef","length","current","scrollIntoView","isError","Code","setCode","setOutput","setIsSuccess","h2","disabled","orignalConsoleLog","outputList","isExecusionSuccess","args","interpreter","Error","message","sendEvents","success","newCode","Snippet","dangerouslySetInnerHTML","__html","replace","RegExp","features","name","description","Documentation","p","feature","Footer","footer","a","href","BhaiLangLogo","version","width","height","preserveAspectRatio","metadata","g","transform","Header","main","h1","target","rel","Docs","Head","title","meta","property","content","fn","res","cb","mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__markAsModule","__reExport","module2","copyDefault","desc","key","call","get","enumerable","__toESM","isNodeMode","__esModule","default","__toCommonJS","cache","temp","set","WeakMap","init_cjs_shims","require_dist","exports","__defProp2","__defProps","defineProperties","__getOwnPropDesc2","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropNames2","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp2","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","configurable","writable","__toCommonJS2","module22","__reExport2","src_exports2","all","__export2","NodeType","NodeType4","src_default2","AdditiveExpression","MultiplicativeExpression","PrimaryExpression","ParanthesizedExpression","IdentifierExpression","AssignmentExpression","BinaryExpression","LogicalExpression","LogicalANDExpression","LogicalORExpression","RelationalExpression","EqualityExpression","BlockStatement","EmptyStatement","ExpressionStatement","InitStatement","PrintStatement","IfStatement","WhileStatement","BreakStatement","ContinueStatement","VariableStatement","BooleanLiteral","NumericLiteral","StringLiteral","NullLiteral","VariableDeclaration","Program","TokenTypes","SPEC","regex","tokenType","Statement","constructor","tokenExecutor","this","_tokenExecutor","static","lookahead","type","BhaiLangModule","getPrintStatement","getEmptyStatement","getBlockStatement","getVariableStatement","getIfStatement","getWhileStatement","getBreakStatement","getContinueStatement","getExpressionStatement","BlockStatement2","statementList","super","_statementList","getStatement","_a","eatTokenAndForwardLookahead","body","getLookahead","getStatementList","eatOptionalSemiColonToken","BreakStatement2","ContinueStatement2","EmptyStatement2","Expression","expressionType","getAdditiveExpression","getMultiplicativeExpression","getPrimaryExpression","getParanthesizedExpression","getAssignmentExpression","getEqualityExpression","getLogicalANDExpression","getLogicalORExpression","getRelationalExpression","getIndentifierExpression","getBinaryExpression","downstreamExpressionType","operatorToken","_getExpression","getLogicalExpression","left","getExpressionImpl","getExpression","right","AssignmentExpression2","arguments","_logicalORExpression","_isAssignmentOperator","_getAssignmentOperator","_checkValidAssignmentTarget","node","SyntaxError","IdentifierExpression2","UnsupportedTypeException","errorMessage","Literal","getNumericLiteral","getBooleanLiteral","getStringLiteral","getNullLiteral","BooleanLiteral2","getLiteral","token","NullLiteral2","NumericLiteral2","Number","StringLiteral2","slice","expression","getLiteralImpl","_getNallaLiteral","_getLeftHandSideExpression","ExpressionStatement2","HANDLED_LOOP_TOKEN_TYPES","IfStatement2","getConditionalStatement","test","consequent","getStatementImpl","ifStatement","alternates","includes","b","prop","__spreadValues","InitStatement2","PrintStatement2","expressions","_getExpressionList","VariableStatement2","nullLiteral","_nullLiteral","declarations","_getVariableDeclarationList","_getVariableDeclaration","_b","init","_getVariableInitializer","WhileStatement2","InvalidStateException2","_tokenizer","spec","_string","_spec","_cursor","initTokenizer","stringToTokenize","isEOF","hasMoreTokens","getNextToken","tokenValue","_matched","matched","exec","tokenizer","_lookahead","setLookahead","getTokenizer","getInitialStatementList","getInitStatement","stopLookaheadType","statementlist","getTokenExecutor","_initStatement","_printStatement","_ifStatement","_breakStatement","_continueStatement","_whileStatement","_expresionStatement","_emptyStatement","_blockStatement","_variableStatement","_additiveExpression","_multiplicativeExpression","_primaryExpression","_paranthesizedExpression","_idetifierExpression","_equalityExpression","_logicalANDExpression","_relationalExpression","_assignmentExpression","_numericLiteral","_stringLiteral","_booleanLiteral","_program","getProgram","_parser","program","_stringToTokenize","parse","getParser","src_exports","__export","RuntimeException","src_default","import_bhai_lang_parser3","errorName","Scope","parentScope","_variables","Map","_isLoop","_isBreakStatement","_isContinueStatement","_parentScope","isLoop","setLoop","setBreakStatement","isBreakStatement","setContinueStatement","isContinueStatement","identifier","has","assign","declare","InvalidStateException","NallaPointerException","checkNumberOperands","operands","getOperationValue","exception","checkStringOperands","checkNumberAndStringOperands","toString","import_bhai_lang_parser","visitNode","_checkNalla","_checkBoolean","_getNodeValue","InterpreterModule","getVisitor","nallaException","getCurrentScope","runtimeException","import_bhai_lang_parser2","_InterpreterModule","nodeType","visitor","_visitorMap","_interpreter","parserObj","scope","_scope","interpret","ast","setCurrentScope","_currentScope","Array","isArray","forEach","statement","currentNodeOutput","_","every","declaration","currentScope","newValue","evaluateNode","testResult","alternate","alternateTest","testResult2","getConditionValue","executions","getInterpreter","module"],"sourceRoot":""}